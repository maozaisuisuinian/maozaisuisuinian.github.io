{"compress":true,"commitItems":[["100f2c7e-d759-4bab-8a29-ec43e4fb6f05",1609058581214,"",[[1609058534347,["whale@Whale",[[1,0,"msf的exp模块\n===\n\n\n##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Seh\n  include Msf::Exploit::Egghunter\n  include Msf::Exploit::Tcp\n  \n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'whale_tcp_connect_test',\n      'Description'    => %q{\n        tcp connect\n      },\n      'License'        => MSF_LICENSE,\n      'Author'         => ['whale3070'],\n      'DisclosureDate' => '2020-12-27',\n      'References'     =>\n        [\n          ['URL', 'https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html']\n        ],\n      'Platform'       => ['linux'],\n      'Arch'           =>\n        [\n          ARCH_X86,\n          ARCH_X64,\n          ARCH_ARMLE,\n          ARCH_AARCH64,\n          ARCH_PPC,\n          ARCH_MIPSLE,\n          ARCH_MIPSBE\n        ],\n      'SessionTypes'   => ['shell', 'meterpreter'],\n      'Targets'        => [['Auto', {}]],\n      'DefaultOptions' =>\n        {\n          'PrependSetresuid' => true,\n          'PrependSetresgid' => true,\n          'PrependFork'      => true,\n          'WfsDelay'         => 30\n        },\n      'DefaultTarget'  => 0))\n    register_options( \n      [\n      Opt::RPORT(21),\n      ],self.class)\n  end\n\n  def exploit\n    connect\n    buf = rand_text_alpha(1024)\n    buf << [ target.ret ].pack('V')\n    buf << payload.encoded\n    \n    sock.put(buf)\n    sock.get_once\n    \n    handler\n  end\nend"]],[0,0],[1604,1604]]],[1609058537203,["whale@Whale",[[1,15,"```"]],[15,15],[18,18]]],[1609058540343,["whale@Whale",[[1,1607,"\n\n"]],[1607,1607],[1608,1608]]],[1609058541173,["whale@Whale",[[-1,1608,"\n"],[1,1609,"````"]],[1608,1608],[1612,1612]]],[1609058542088,["whale@Whale",[[-1,1611,"`"]],[1612,1612],[1611,1611]]],[1609058548440,["whale@Whale",[[1,15,"\n"]],[14,14],[15,15]]],[1609058549611,["whale@Whale",[[1,14,"f"]],[14,14],[15,15]]],[1609058550101,["whale@Whale",[[-1,14,"f"]],[15,15],[14,14]]],[1609058553426,["whale@Whale",[[1,14,"分为三个部分"]],[14,14],[20,20]]],[1609058553792,["whale@Whale",[[1,22,"\n"]],[20,20],[21,21]]],[1609058554578,["whale@Whale",[[-1,22,"\n"]],[21,21],[20,20]]],[1609058556048,["whale@Whale",[[-1,16,"三"]],[17,17],[16,16]]],[1609058556456,["whale@Whale",[[1,16,"4"]],[16,16],[17,17]]],[1609058567043,["whale@Whale",[[-1,238,"  "],[-1,265,"\n "],[-1,299,"\n "],[-1,327,"\n  "]],[165,234],[321,321]]],[1609058567943,["whale@Whale",[[1,238,"  "],[1,263,"\n "],[1,295,"\n "],[1,321,"\n  "]],[321,321],[165,234]]],[1609058575344,["whale@Whale",[[1,22,"\n"]],[21,21],[22,22]]],[1609058576695,["whale@Whale",[[1,23,"\n"]],[21,21],[22,22]]],[1609058580413,["whale@Whale",[[1,21,"1. class "]],[21,21],[30,30]]],[1609058592898,["whale@Whale",[[1,30,"定义类，导入的msf的类，叫mixins"]],[30,30],[50,50]]],[1609058595382,["whale@Whale",[[1,52,"2. "]],[52,52],[55,55]]],[1609058596976,["whale@Whale",[[1,56,"\n"]],[55,55],[56,56]]],[1609058598445,["whale@Whale",[[1,52," "]],[52,52],[53,53]]],[1609058599120,["whale@Whale",[[-1,52," "]],[53,53],[52,52]]],[1609058601881,["whale@Whale",[[1,55," inclue"]],[55,55],[62,62]]],[1609058602422,["whale@Whale",[[-1,61,"e"]],[62,62],[61,61]]],[1609058607392,["whale@Whale",[[1,61,"de 导入函数库"]],[61,61],[69,69]]],[1609058608064,["whale@Whale",[[1,71,"\n"]],[69,69],[70,70]]],[1609058608567,["whale@Whale",[[1,72,"\n"]],[70,70],[71,71]]],[1609058617894,["whale@Whale",[[1,71,"3. 初始化，定义参数，模块的值"]],[71,71],[87,87]]],[1609058620400,["whale@Whale",[[1,89,"\n"]],[88,88],[89,89]]],[1609058622770,["whale@Whale",[[1,89,"4. exp"]],[89,89],[95,95]]],[1609058624390,["whale@Whale",[[-1,92,"exp"]],[95,95],[92,92]]],[1609058627242,["whale@Whale",[[1,92,"要执行的exp"]],[92,92],[99,99]]],[1609058631507,["whale@Whale",[[1,92,"定义"]],[92,92],[94,94]]],[1609058640599,["whale@Whale",[[1,14,"\n"]],[13,13],[14,14]]],[1609058654297,["whale@Whale",[[1,103,"\n"]],[102,102],[103,103]]],[1609058654511,["whale@Whale",[[1,104,"\n"]],[103,103],[104,104]]],[1609058662390,["whale@Whale",[[1,104,"如果语法写错了，可以在日志里看>"]],[104,104],[120,120]]],[1609058662882,["whale@Whale",[[-1,119,">"]],[120,120],[119,119]]],[1609058663782,["whale@Whale",[[1,119,": /root/.msf4/logs/framework.log"]],[119,119],[151,151]]],[1609058664295,["whale@Whale",[[1,152,"\n"]],[151,151],[152,152]]],[1609058702239,["whale@Whale",[[1,153,"\n"]],[152,152],[153,153]]],[1609058704641,["whale@Whale",[[1,153,"## xie"]],[153,153],[159,159]]],[1609058705328,["whale@Whale",[[-1,156,"xie"]],[159,159],[156,156]]],[1609058710593,["whale@Whale",[[1,156,"写的demo,"]],[156,156],[163,163]]],[1609058711171,["whale@Whale",[[-1,162,","]],[163,163],[162,162]]],[1609058724068,["whale@Whale",[[1,162,"，作用是调用tcp模块，进行ftp连接"]],[162,162],[181,181]]],[1609058729639,["whale@Whale",[[1,153,"\n"]],[152,152],[153,153]]],[1609058729968,["whale@Whale",[[1,153,"/root/.msf4/logs/framework.log"]],[153,153],[183,183]]],[1609058731535,["whale@Whale",[[-1,153,"/root/.msf4/logs/framework.log"]],[183,183],[153,153]]],[1609058754473,["whale@Whale",[[1,372,"![1]($res/1.PNG)\n\n"]],[153,153],[389,389]]],[1609058758009,["whale@Whale",[[-1,372,"![1]($res/1.PNG)\n"]],[372,389],[372,372]]],[1609058759761,["whale@Whale",[[1,153,"![1]($res/1.PNG)\n"]],[153,153],[170,170]]]]]]}