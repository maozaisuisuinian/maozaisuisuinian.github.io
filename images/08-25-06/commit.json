{"compress":true,"commitItems":[["db7dbf34-0ed8-4438-83c7-4f9cb96b57b2",1566438206744,"",[[1566438158265,["whale@Whale",[[1,0,"docker（四）\n===\n\n\n"]],[0,0],[16,16]]],[1566438174144,["whale@Whale",[[1,6,"与vulnhub"]],[6,6],[14,14]]],[1566438177670,["whale@Whale",[[-1,10,"nhub"]],[14,14],[10,10]]],[1566438179207,["whale@Whale",[[1,10,"hub"]],[10,10],[13,13]]]]],["adeed4cc-cd62-41d0-b07e-c64db942c4f8",1566523929344,"docker与vulhub（四）\n===\n\n\n",[[1566523906841,["whale@Whale",[[1,6," compose"]],[6,6],[14,14]]],[1566523908694,["whale@Whale",[[1,31,"\n"]],[28,28],[29,29]]],[1566523908961,["whale@Whale",[[1,32,"\n"]],[29,29],[30,30]]],[1566523916112,["whale@Whale",[[1,30,"compose 是组成的意思"]],[30,30],[44,44]]],[1566524789532,["whale@Whale",[[1,47,"\n"]],[44,44],[45,45]]],[1566524789756,["whale@Whale",[[1,48,"\n"]],[45,45],[46,46]]],[1566524790428,["whale@Whale",[[1,46,"dockerfile与compose有什么区别"]],[46,46],[69,69]]],[1566524851389,["whale@Whale",[[1,30,"\n"]],[29,29],[30,30]]],[1566524851656,["whale@Whale",[[1,30,"pip install -U docker-compose\r\ndocker-compose --version\r\n"]],[30,30],[87,87]]],[1566524864943,["whale@Whale",[[1,29,"[https://whale3070.github.io/tools/2019/08/19/07-x/](https://whale3070.github.io/tools/2019/08/19/07-x/)"],[-1,59,"\r"],[-1,85,"\r"]],[29,29],[133,133]]],[1566524871098,["whale@Whale",[[1,134,"\n"]],[133,133],[134,134]]],[1566524872296,["whale@Whale",[[1,135,"\n"]],[134,134],[135,135]]],[1566524878209,["whale@Whale",[[1,135,"在上一篇中，我们"]],[135,135],[143,143]]],[1566524878809,["whale@Whale",[[-1,142,"们"]],[143,143],[142,142]]],[1566524884393,["whale@Whale",[[1,142,"用kali安装了docker,"]],[142,142],[157,157]]],[1566524884871,["whale@Whale",[[-1,156,","]],[157,157],[156,156]]],[1566524888297,["whale@Whale",[[1,156,"，使用了"]],[156,156],[160,160]]],[1566524896427,["whale@Whale",[[1,160,"dockerfile来新建容器。"]],[160,160],[176,176]]],[1566525188152,["whale@Whale",[[1,177,"\n"]],[176,176],[177,177]]],[1566525188632,["whale@Whale",[[1,178,"\n"]],[177,177],[178,178]]],[1566525190899,["whale@Whale",[[1,178,"·"]],[178,178],[179,179]]],[1566525191800,["whale@Whale",[[-1,178,"·"]],[179,179],[178,178]]],[1566525192637,["whale@Whale",[[1,178,"```"]],[178,178],[181,181]]],[1566525194122,["whale@Whale",[[1,237,"```"]],[237,237],[240,240]]],[1566525197104,["whale@Whale",[[1,178,"\n"]],[177,177],[178,178]]],[1566525198841,["whale@Whale",[[1,178,"## anz"]],[178,178],[184,184]]],[1566525199866,["whale@Whale",[[-1,181,"anz"]],[184,184],[181,181]]],[1566525204771,["whale@Whale",[[1,181,"安装compose"]],[181,181],[190,190]]],[1566525209301,["whale@Whale",[[1,254,"\n"]],[253,253],[254,254]]],[1566525312252,["whale@Whale",[[1,271,"## "]],[271,271],[274,274]]],[1566525314086,["whale@Whale",[[1,300,"\n"]],[297,297],[298,298]]],[1566525357977,["whale@Whale",[[1,298,"dockerfile与build命令是**从无到有**构建新镜像"]],[298,298],[330,330]]],[1566525358120,["whale@Whale",[[1,333,"\n"]],[330,330],[331,331]]],[1566525358632,["whale@Whale",[[1,334,"\n"]],[331,331],[332,332]]],[1566525370250,["whale@Whale",[[1,332,"而compose是组合多个"]],[332,332],[345,345]]],[1566525374890,["whale@Whale",[[1,345,"镜像，例如"]],[345,345],[350,350]]],[1566525440205,["whale@Whale",[[1,350,"python flask应用，需要python环境，需要redis数据库，那么用docker compose\r\n就可以"]],[350,350],[409,409]]],[1566525448062,["whale@Whale",[[-1,404,"\r"]],[350,350],[350,350]]],[1566525455781,["whale@Whale",[[1,350,"需要构建一个"]],[350,350],[356,356]]],[1566525465337,["whale@Whale",[[1,371,"该应用"]],[371,371],[374,374]]],[1566525472293,["whale@Whale",[[-1,413,"\n"]],[413,413],[413,413]]],[1566525489646,["whale@Whale",[[1,416,"将"]],[416,416],[417,417]]],[1566525506080,["whale@Whale",[[1,417,"多个image组合在一起，形成新的image。"]],[417,417],[440,440]]],[1566525506980,["whale@Whale",[[1,443,"\n"]],[440,440],[441,441]]],[1566525508066,["whale@Whale",[[1,444,"\n"]],[441,441],[442,442]]],[1566525577350,["whale@Whale",[[1,419,"已有的"]],[419,419],[422,422]]],[1566525578771,["whale@Whale",[[1,448,"\n"]],[443,443],[444,444]]],[1566525579009,["whale@Whale",[[1,449,"\n"]],[444,444],[445,445]]],[1566525589066,["whale@Whale",[[1,445,"### python flast"]],[445,445],[461,461]]],[1566525589713,["whale@Whale",[[-1,460,"t"]],[461,461],[460,460]]],[1566525591390,["whale@Whale",[[1,460,"k案例"]],[460,460],[463,463]]],[1566525591794,["whale@Whale",[[1,468,"\n"]],[463,463],[464,464]]],[1566525737463,["whale@Whale",[[1,464,"[https://github.com/guanwei/dockerbook-code](https://github.com/guanwei/dockerbook-code)"]],[464,464],[552,552]]],[1566525740816,["whale@Whale",[[1,464,"\n"]],[463,463],[464,464]]],[1566525761657,["whale@Whale",[[1,508,"/tree/master/7/composeapp"],[1,552,"/tree/master/7/composeapp"]],[465,553],[603,603]]],[1566525768785,["whale@Whale",[[1,464,"源码下载地址："]],[464,464],[471,471]]],[1566525776448,["whale@Whale",[[-1,471,"\n"]],[471,471],[471,471]]],[1566525778495,["whale@Whale",[[1,614,"\n"]],[610,610],[611,611]]],[1566526494920,["whale@Whale",[[-1,254,"\n"]],[254,254],[253,253]]],[1566526513376,["whale@Whale",[[-1,178,"## 安装compose\n```\npip install -U docker-compose\ndocker-compose --version\n```\ncompose 是组成的意思\n"]],[178,269],[178,178]]],[1566526515210,["whale@Whale",[[1,523,"\n"]],[518,518],[519,519]]],[1566526515597,["whale@Whale",[[1,519,"## 安装compose\n```\npip install -U docker-compose\ndocker-compose --version\n```\ncompose 是组成的意思\n"]],[519,519],[610,610]]],[1566526520280,["whale@Whale",[[-1,353,"### python flask案例\n源码下载地址：[https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp](https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp)"]],[353,517],[353,353]]],[1566526522577,["whale@Whale",[[1,448,"### python flask案例\n源码下载地址：[https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp](https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp)"]],[448,448],[612,612]]],[1566526524296,["whale@Whale",[[-1,450,"#"]],[451,451],[450,450]]],[1566526532909,["whale@Whale",[[1,176,"这次学校"]],[176,176],[180,180]]],[1566526533841,["whale@Whale",[[-1,178,"学校"]],[180,180],[178,178]]],[1566526540750,["whale@Whale",[[1,178,"学习一下docker compose，"]],[178,178],[197,197]]],[1566526545090,["whale@Whale",[[-1,196,"，"]],[197,197],[196,196]]],[1566526577797,["whale@Whale",[[1,196,"。docker"]],[196,196],[203,203]]],[1566526580543,["whale@Whale",[[-1,197,"docker"]],[203,203],[197,197]]],[1566526584553,["whale@Whale",[[-1,199,"\n"]],[197,197],[197,197]]],[1566526590738,["whale@Whale",[[1,373,"dockerg"]],[373,373],[380,380]]],[1566526591294,["whale@Whale",[[-1,379,"g"]],[380,380],[379,379]]],[1566526607158,["whale@Whale",[[1,379,"官方推荐每个dockerr"]],[379,379],[392,392]]],[1566526607554,["whale@Whale",[[-1,391,"r"]],[392,392],[391,391]]],[1566526613311,["whale@Whale",[[1,391,"容器只安装"]],[391,391],[396,396]]],[1566526616369,["whale@Whale",[[-1,393,"只安装"]],[396,396],[393,393]]],[1566526635103,["whale@Whale",[[1,393,"只运行1个进程。所以当我们需要多个进程的"]],[393,393],[413,413]]],[1566526637772,["whale@Whale",[[-1,410,"进程的"]],[413,413],[410,410]]],[1566526644536,["whale@Whale",[[1,410,"image的时候，就可以使用"]],[410,410],[424,424]]],[1566526649953,["whale@Whale",[[1,424,"compose进行管理。"]],[424,424],[436,436]]],[1566527091173,["whale@Whale",[[1,347,"**"]],[347,347],[349,349]]],[1566527093469,["whale@Whale",[[1,352,"**"]],[352,352],[354,354]]],[1566527101377,["whale@Whale",[[-1,352,"**"]],[354,354],[352,352]]],[1566527105564,["whale@Whale",[[1,359,"**"]],[359,359],[361,361]]],[1566527315187,["whale@Whale",[[-1,700,"\n"],[1,701,"## went"]],[700,700],[707,707]]],[1566527315664,["whale@Whale",[[-1,705,"nt"]],[707,707],[705,705]]],[1566527316040,["whale@Whale",[[-1,703,"we"]],[705,705],[703,703]]],[1566527317443,["whale@Whale",[[1,703,"问题"]],[703,703],[705,705]]],[1566527318054,["whale@Whale",[[1,705,"\n\nCannot connect to the Docker daemon "]],[705,705],[742,742]]],[1566527319824,["whale@Whale",[[1,706,"\n"]],[705,705],[706,706]]],[1566527323225,["whale@Whale",[[1,706,"当遇到"]],[706,706],[709,709]]],[1566527325330,["whale@Whale",[[-1,709,"\n"]],[709,709],[709,709]]],[1566527326462,["whale@Whale",[[1,709,"·"]],[709,709],[710,710]]],[1566527327073,["whale@Whale",[[-1,709,"·"]],[710,710],[709,709]]],[1566527327541,["whale@Whale",[[1,709,"`"]],[709,709],[710,710]]],[1566527328879,["whale@Whale",[[1,746,"`"]],[746,746],[747,747]]],[1566527332671,["whale@Whale",[[1,745,"..."]],[745,745],[748,748]]],[1566527337541,["whale@Whale",[[1,750,"的错误时候"]],[750,750],[755,755]]],[1566527337685,["whale@Whale",[[-1,754,"候"]],[755,755],[754,754]]],[1566527342945,["whale@Whale",[[1,754,"，运行``"]],[754,754],[759,759]]],[1566527347898,["whale@Whale",[[1,758,"service docker start"]],[758,758],[778,778]]],[1566527354129,["whale@Whale",[[1,779,"开启docker服务"]],[779,779],[789,789]]],[1566527358446,["whale@Whale",[[1,757,"\n"]],[757,757],[758,758]]],[1566527358672,["whale@Whale",[[1,758,"\n"]],[758,758],[759,759]]],[1566527361922,["whale@Whale",[[1,781," "]],[781,781],[782,782]]],[1566527366655,["whale@Whale",[[-1,754,"，"]],[755,755],[754,754]]],[1566527367504,["whale@Whale",[[1,754,"\n"]],[754,754],[755,755]]],[1566527368528,["whale@Whale",[[1,755,"\n"]],[755,755],[756,756]]],[1566527371809,["whale@Whale",[[-1,759,"\n"]],[760,760],[759,759]]],[1566527372097,["whale@Whale",[[-1,758,"\n"]],[759,759],[758,758]]],[1566527794840,[null,[[-1,710,"\n"],[1,745,"n"],[-1,748,"n"],[1,749," "],[-1,791," "],[1,792,"\n"]],[710,710],[793,793]]],[1566527794840,[null,[[1,710,"\n"],[-1,744,"n"],[1,748,"n"],[-1,748," "],[1,791," "],[-1,791,"\n"]],[793,793],[710,710]]],[1566527764955,["whale@Whale",[[-1,534,"\n"]],[534,534],[533,533]]]]],["65644bf5-70cc-4a08-945a-d83d60e5b484",1566550167128,"docker compose与vulhub（四）\n===\n[https://whale3070.github.io/tools/2019/08/19/07-x/](https://whale3070.github.io/tools/2019/08/19/07-x/)\n\n在上一篇中，我用kali安装了docker，使用了dockerfile来新建容器。这次学习一下docker compose。\n\n## dockerfile与compose有什么区别\ndockerfile与build命令是**从无到有**构建新镜像\n\n而compose是组合多个镜像，例如需要构建一个python flask应用，该应用需要python环境，需要redis数据库，那么用docker compose就可以将多个**已有的image组合**在一起，形成新的image。\n\ndocker官方推荐每个docker容器只运行1个进程。所以当我们需要多个image的时候，就可以使用compose进行管理。\n\n## 安装compose\n```\npip install -U docker-compose\ndocker-compose --version\n```\ncompose 是组成的意思\n\n## python flask案例\n源码下载地址：[https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp](https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp)\n\n## 问题\n当遇到`Cannot connect to the Docker daemon... `的错误时\n\n运行`service docker start` 开启docker服务\n",[[1566550154564,["whale@Whale",[[1,699,"![1]($res/1.PNG)\n\n"]],[698,698],[716,716]]],[1566550216528,["whale@Whale",[[1,698,"docker build -tjamtur01/composeapp ."]],[698,698],[734,734]]],[1566550219428,["whale@Whale",[[1,698,"\n"]],[697,697],[698,698]]],[1566550219561,["whale@Whale",[[1,699,"\n"]],[698,698],[699,699]]],[1566550225673,["whale@Whale",[[1,699,"第一步，构建"]],[699,699],[705,705]]],[1566550248271,["whale@Whale",[[1,705,"新的image。图中的文件都可以在上面的链接中进行下载。"]],[705,705],[733,733]]],[1566550252157,["whale@Whale",[[1,734,"·"]],[734,734],[735,735]]],[1566550253743,["whale@Whale",[[-1,734,"·"]],[735,735],[734,734]]],[1566550254332,["whale@Whale",[[1,734,"`"]],[734,734],[735,735]]],[1566550255311,["whale@Whale",[[1,771,"`"]],[771,771],[772,772]]],[1566550255756,["whale@Whale",[[1,773,"\n"]],[772,772],[773,773]]],[1566550256201,["whale@Whale",[[1,774,"\n"]],[773,773],[774,774]]],[1566550291028,["whale@Whale",[[-1,774,"\n"]],[774,774],[773,773]]],[1566550291704,["whale@Whale",[[-1,773,"\n"]],[773,773],[772,772]]],[1566550295030,["whale@Whale",[[1,791,"\n"]],[789,789],[790,790]]],[1566550295291,["whale@Whale",[[1,792,"\n"]],[790,790],[791,791]]],[1566550296231,["whale@Whale",[[1,791,"die"]],[791,791],[794,794]]],[1566550296855,["whale@Whale",[[-1,791,"die"]],[794,794],[791,791]]],[1566550298991,["whale@Whale",[[1,791,"第二部"]],[791,791],[794,794]]],[1566550299484,["whale@Whale",[[-1,793,"部"]],[794,794],[793,793]]],[1566550300738,["whale@Whale",[[1,793,"步骤"]],[793,793],[795,795]]],[1566550300885,["whale@Whale",[[-1,794,"骤"]],[795,795],[794,794]]],[1566550301096,["whale@Whale",[[1,794,"，"]],[794,794],[795,795]]]]],["008d904e-3e76-462e-a1fb-3425c0bb1b86",1566558543588,"docker compose与vulhub（四）\n===\n[https://whale3070.github.io/tools/2019/08/19/07-x/](https://whale3070.github.io/tools/2019/08/19/07-x/)\n\n在上一篇中，我用kali安装了docker，使用了dockerfile来新建容器。这次学习一下docker compose。\n\n## dockerfile与compose有什么区别\ndockerfile与build命令是**从无到有**构建新镜像\n\n而compose是组合多个镜像，例如需要构建一个python flask应用，该应用需要python环境，需要redis数据库，那么用docker compose就可以将多个**已有的image组合**在一起，形成新的image。\n\ndocker官方推荐每个docker容器只运行1个进程。所以当我们需要多个image的时候，就可以使用compose进行管理。\n\n## 安装compose\n```\npip install -U docker-compose\ndocker-compose --version\n```\ncompose 是组成的意思\n\n## python flask案例\n源码下载地址：[https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp](https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp)\n\n第一步，构建新的image。图中的文件都可以在上面的链接中进行下载。\n`docker build -tjamtur01/composeapp .`\n![1]($res/1.PNG)\n\n第二步，\n\n## 问题\n当遇到`Cannot connect to the Docker daemon... `的错误时\n\n运行`service docker start` 开启docker服务\n",[[1566558510824,["whale@Whale",[[1,797,"![2]($res/2.PNG)\n\n"]],[796,796],[814,814]]],[1566558540252,["whale@Whale",[[1,795,"需要一个yml文件"]],[795,795],[804,804]]],[1566560756024,["whale@Whale",[[1,804," "]],[804,804],[805,805]]],[1566563053991,["whale@Whale",[[1,805,"docker-compose up\r\n"]],[805,805],[824,824]]],[1566563056427,["whale@Whale",[[1,804,"，"],[-1,822,"\r"]],[804,804],[805,805]]],[1566563058661,["whale@Whale",[[1,805,"使用"]],[805,805],[807,807]]],[1566563061028,["whale@Whale",[[-1,807," "]],[808,808],[807,807]]],[1566563062195,["whale@Whale",[[1,807,"`"]],[807,807],[808,808]]],[1566563063678,["whale@Whale",[[1,825,"`"]],[825,825],[826,826]]],[1566563067527,["whale@Whale",[[-1,828,"\n"]],[828,828],[827,827]]],[1566563067947,["whale@Whale",[[-1,827,"\n"]],[827,827],[826,826]]],[1566563072667,["whale@Whale",[[-1,804,"，使用`docker-compose up`"]],[804,826],[804,804]]],[1566563074242,["whale@Whale",[[1,823,"\n"]],[822,822],[823,823]]],[1566563074846,["whale@Whale",[[1,823,"，使用`docker-compose up`"]],[823,823],[845,845]]]]],["3e044edb-b530-4109-9b8c-f6c53973425f",1566646464878,"docker compose与vulhub（四）\n===\n[https://whale3070.github.io/tools/2019/08/19/07-x/](https://whale3070.github.io/tools/2019/08/19/07-x/)\n\n在上一篇中，我用kali安装了docker，使用了dockerfile来新建容器。这次学习一下docker compose。\n\n## dockerfile与compose有什么区别\ndockerfile与build命令是**从无到有**构建新镜像\n\n而compose是组合多个镜像，例如需要构建一个python flask应用，该应用需要python环境，需要redis数据库，那么用docker compose就可以将多个**已有的image组合**在一起，形成新的image。\n\ndocker官方推荐每个docker容器只运行1个进程。所以当我们需要多个image的时候，就可以使用compose进行管理。\n\n## 安装compose\n```\npip install -U docker-compose\ndocker-compose --version\n```\ncompose 是组成的意思\n\n## python flask案例\n源码下载地址：[https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp](https://github.com/guanwei/dockerbook-code/tree/master/7/composeapp)\n\n第一步，构建新的image。图中的文件都可以在上面的链接中进行下载。\n`docker build -tjamtur01/composeapp .`\n![1]($res/1.PNG)\n\n第二步，需要一个yml文件\n![2]($res/2.PNG)\n\n，使用`docker-compose up`\n## 问题\n当遇到`Cannot connect to the Docker daemon... `的错误时\n\n运行`service docker start` 开启docker服务\n",[[1566646418293,["whale@Whale",[[1,846,"\n"]],[845,845],[846,846]]],[1566646419583,["whale@Whale",[[1,847,"\n"]],[846,846],[847,847]]],[1566646422353,["whale@Whale",[[-1,823,"，"]],[824,824],[823,823]]],[1566721402363,["whale@Whale",[[1,847,"![5]($res/5.PNG)\n\n"]],[846,846],[864,864]]],[1566721706779,["whale@Whale",[[1,849,"6]($res/6.PNG)\n\n!["]],[846,846],[864,864]]],[1566721709949,["whale@Whale",[[-1,846,"\n"]],[846,846],[845,845]]],[1566722004665,["whale@Whale",[[1,844,"，"]],[844,844],[845,845]]],[1566722010330,["whale@Whale",[[1,845,"开启"]],[845,845],[847,847]]],[1566722014023,["whale@Whale",[[-1,845,"开启"]],[847,847],[845,845]]],[1566722017405,["whale@Whale",[[1,845,"组合容器。"]],[845,845],[850,850]]],[1566722164769,["whale@Whale",[[1,870,"\n"]],[869,869],[870,870]]],[1566722165428,["whale@Whale",[[1,870,"访问浏览器本地的5000端口，即可\r\nctrl+c 关闭正在运行的服务"]],[870,870],[905,905]]],[1566722170298,["whale@Whale",[[-1,887,"\r"],[1,888,"。"]],[887,887],[888,888]]],[1566722170997,["whale@Whale",[[-1,888,"\n"]],[888,888],[888,888]]],[1566722455313,["whale@Whale",[[1,923,"![7]($res/7.PNG)\n\n"]],[922,922],[940,940]]],[1566722471249,["whale@Whale",[[1,922,"docker-compose up -d 以后台模式运行\r\ndocker-compose ps"]],[922,922],[969,969]]],[1566722473208,["whale@Whale",[[1,922,"\n"],[-1,950,"\r"]],[921,921],[922,922]]],[1566722485066,["whale@Whale",[[-1,923,"docker-compose up -d 以后台模式运行"]],[923,951],[923,923]]],[1566722487080,["whale@Whale",[[1,850,"docker-compose up -d 以后台模式运行"]],[850,850],[878,878]]],[1566722494710,["whale@Whale",[[1,871,"可以"]],[871,871],[873,873]]],[1566722495897,["whale@Whale",[[-1,873,"以"]],[873,873],[872,872]]],[1566722503059,["whale@Whale",[[1,850,"·"]],[850,850],[851,851]]],[1566722503796,["whale@Whale",[[-1,850,"·"]],[851,851],[850,850]]],[1566722504197,["whale@Whale",[[1,850,"`"]],[850,850],[851,851]]],[1566722506634,["whale@Whale",[[1,871,"`"]],[871,871],[872,872]]],[1566722508966,["whale@Whale",[[1,881,"."]],[881,881],[882,882]]],[1566722509736,["whale@Whale",[[-1,881,"."]],[882,882],[881,881]]],[1566722510480,["whale@Whale",[[1,881,"。"]],[881,881],[882,882]]],[1566722513045,["whale@Whale",[[1,956,"·"]],[956,956],[957,957]]],[1566722514335,["whale@Whale",[[-1,956,"·"]],[957,957],[956,956]]],[1566722514963,["whale@Whale",[[1,956,"`"]],[956,956],[957,957]]],[1566722516072,["whale@Whale",[[1,974,"`"]],[974,974],[975,975]]],[1566722517553,["whale@Whale",[[-1,955,"\n"]],[955,955],[954,954]]],[1566722517773,["whale@Whale",[[-1,954,"\n"]],[954,954],[953,953]]],[1566722518743,["whale@Whale",[[1,954,"\n"]],[953,953],[954,954]]],[1566722583615,["whale@Whale",[[1,992,"可以看到正在运行的所有服务"]],[992,992],[1005,1005]]],[1566722586234,["whale@Whale",[[1,992,"\n"]],[991,991],[992,992]]],[1566722588291,["whale@Whale",[[1,1006,","]],[1006,1006],[1007,1007]]],[1566722589021,["whale@Whale",[[-1,1006,","]],[1007,1007],[1006,1006]]],[1566722592259,["whale@Whale",[[1,1006,"，刚刚看到的"]],[1006,1006],[1012,1012]]],[1566722594415,["whale@Whale",[[-1,1009,"看到的"]],[1012,1012],[1009,1009]]],[1566722604262,["whale@Whale",[[1,1009,"开启的redis服务器以及"]],[1009,1009],[1022,1022]]],[1566722671118,["whale@Whale",[[1,1022,"web"]],[1022,1022],[1025,1025]]],[1566722685773,["whale@Whale",[[1,1022,"flask "]],[1022,1022],[1028,1028]]],[1566722687433,["whale@Whale",[[1,1031,"wu"]],[1031,1031],[1033,1033]]],[1566722688022,["whale@Whale",[[-1,1031,"wu"]],[1033,1033],[1031,1031]]],[1566722689278,["whale@Whale",[[1,1031,"服务。"]],[1031,1031],[1034,1034]]],[1566722690710,["whale@Whale",[[1,1035,"\n"]],[1034,1034],[1035,1035]]],[1566722948495,["whale@Whale",[[1,1036,"\n"]],[1035,1035],[1036,1036]]],[1566722956568,["whale@Whale",[[1,1036,"## compose "]],[1036,1036],[1047,1047]]],[1566722957366,["whale@Whale",[[-1,1046," "]],[1047,1047],[1046,1046]]],[1566722957635,["whale@Whale",[[1,1046,"r"]],[1046,1046],[1047,1047]]],[1566722958192,["whale@Whale",[[-1,1046,"r"]],[1047,1047],[1046,1046]]],[1566722959627,["whale@Whale",[[1,1046,"日志"]],[1046,1046],[1048,1048]]],[1566722959670,["whale@Whale",[[1,1049,"\n"]],[1048,1048],[1049,1049]]],[1566722974794,["whale@Whale",[[1,1049,"docker-compose logs"]],[1049,1049],[1068,1068]]],[1566722999573,["whale@Whale",[[1,1049,"`"]],[1049,1049],[1050,1050]]],[1566723000728,["whale@Whale",[[1,1069,"`"]],[1069,1069],[1070,1070]]],[1566723060775,["whale@Whale",[[1,1071,"\n"]],[1070,1070],[1071,1071]]],[1566723069226,["whale@Whale",[[1,1071,"## 停止组合"]],[1071,1071],[1078,1078]]],[1566723071550,["whale@Whale",[[-1,1076,"组合"]],[1078,1078],[1076,1076]]],[1566723073134,["whale@Whale",[[1,1076,"容器"]],[1076,1076],[1078,1078]]],[1566723073300,["whale@Whale",[[1,1079,"\n"]],[1078,1078],[1079,1079]]],[1566723081727,["whale@Whale",[[1,1079,"`docker-compose logs`"]],[1079,1079],[1100,1100]]],[1566723085656,["whale@Whale",[[-1,1095,"logs"]],[1095,1095],[1095,1095]]],[1566723089044,["whale@Whale",[[1,1095,"stop"]],[1095,1095],[1099,1099]]],[1566723232229,["whale@Whale",[[1,1101,"\n"]],[1100,1100],[1101,1101]]],[1566723232657,["whale@Whale",[[1,1102,"\n"]],[1101,1101],[1102,1102]]],[1566723233209,["whale@Whale",[[-1,1102,"\n"]],[1102,1102],[1101,1101]]],[1566723234120,["whale@Whale",[[1,1101,"hu"]],[1101,1101],[1103,1103]]],[1566723234491,["whale@Whale",[[-1,1102,"u"]],[1103,1103],[1102,1102]]],[1566723236705,["whale@Whale",[[1,1101,"或者"]],[1101,1101],[1103,1103]]],[1566723237037,["whale@Whale",[[1,1104,"\n"]],[1103,1103],[1104,1104]]],[1566723237728,["whale@Whale",[[1,1105,"\n"]],[1104,1104],[1105,1105]]],[1566723248980,["whale@Whale",[[1,1105,"docker-compose kill·"]],[1105,1105],[1125,1125]]],[1566723249801,["whale@Whale",[[-1,1124,"·"]],[1125,1125],[1124,1124]]],[1566723250589,["whale@Whale",[[1,1124,"`"]],[1124,1124],[1125,1125]]],[1566723251790,["whale@Whale",[[1,1105,"`"]],[1105,1105],[1106,1106]]],[1566723253820,["whale@Whale",[[1,1127,"\n"]],[1126,1126],[1127,1127]]],[1566723270086,["whale@Whale",[[-1,1104,"\n"]],[1104,1104],[1103,1103]]],[1566723271865,["whale@Whale",[[-1,1103,"\n"]],[1103,1103],[1103,1103]]],[1566723275038,["whale@Whale",[[1,1101,"\n"]],[1100,1100],[1101,1101]]],[1566723475068,[null,[[-1,1127,"\n"]],[1127,1127],[1127,1127]]],[1566723475069,[null,[[1,1127,"\n"]],[1127,1127],[1127,1127]]],[1566723419061,["whale@Whale",[[1,1071,"\n"]],[1071,1071],[1072,1072]]],[1566723429116,["whale@Whale",[[1,1128,"\n"]],[1127,1127],[1128,1128]]],[1566723431104,["whale@Whale",[[1,1128,"## sha"]],[1128,1128],[1134,1134]]],[1566723432579,["whale@Whale",[[-1,1131,"sha"]],[1134,1134],[1131,1131]]],[1566723435983,["whale@Whale",[[1,1131,"删除容器"]],[1131,1131],[1135,1135]]],[1566723436116,["whale@Whale",[[1,1136,"\n"]],[1135,1135],[1136,1136]]],[1566723441477,["whale@Whale",[[-1,1105,"`docker-compose kill`"]],[1105,1126],[1105,1105]]],[1566723443670,["whale@Whale",[[1,1105,"`docker-compose kill`"]],[1105,1105],[1126,1126]]],[1566723445821,["whale@Whale",[[1,1136,"`docker-compose kill`"]],[1136,1136],[1157,1157]]],[1566723451855,["whale@Whale",[[-1,1152,"kill"]],[1156,1156],[1152,1152]]],[1566723453065,["whale@Whale",[[1,1152,"rm"]],[1152,1152],[1154,1154]]],[1566723455805,["whale@Whale",[[1,1156,"\n"]],[1155,1155],[1156,1156]]],[1566725051002,[null,[[-1,1157,"\n"]],[1157,1157],[1157,1157]]],[1566725051002,[null,[[1,1157,"\n"]],[1157,1157],[1157,1157]]],[1566725040927,["whale@Whale",[[1,1249,"\n"]],[1248,1248],[1249,1249]]],[1566725041131,["whale@Whale",[[1,1250,"\n"]],[1249,1249],[1250,1250]]],[1566725042120,["whale@Whale",[[-1,1250,"\n"],[1,1251,"h"]],[1250,1250],[1251,1251]]],[1566725042777,["whale@Whale",[[-1,1250,"h"]],[1251,1251],[1250,1250]]],[1566725044218,["whale@Whale",[[1,1250,"\n\n"]],[1250,1250],[1251,1251]]],[1566725044990,["whale@Whale",[[-1,1251,"\n"]],[1251,1251],[1250,1250]]],[1566725046977,["whale@Whale",[[-1,1250,"\n"],[1,1251,"# d"]],[1250,1250],[1253,1253]]],[1566725047338,["whale@Whale",[[-1,1252,"d"]],[1253,1253],[1252,1252]]],[1566725048152,["whale@Whale",[[1,1252,"vyu"]],[1252,1252],[1255,1255]]],[1566725048771,["whale@Whale",[[-1,1253,"yu"]],[1255,1255],[1253,1253]]],[1566725048975,["whale@Whale",[[1,1253,"y"]],[1253,1253],[1254,1254]]],[1566725050880,["whale@Whale",[[-1,1253,"y"]],[1254,1254],[1253,1253]]],[1566725111016,[null,[[-1,1157,"\n"],[1,1250,"\n"],[-1,1253,"\n"]],[1157,1157],[1253,1253]]],[1566725111016,[null,[[1,1157,"\n"],[-1,1249,"\n"],[1,1253,"\n"]],[1253,1253],[1157,1157]]],[1566725055267,["whale@Whale",[[1,1253,"ulhub使用只能拿"]],[1253,1253],[1263,1263]]],[1566725056525,["whale@Whale",[[-1,1260,"只能拿"]],[1263,1263],[1260,1260]]],[1566725058199,["whale@Whale",[[1,1260,"指南"]],[1260,1260],[1262,1262]]],[1566725060085,["whale@Whale",[[1,1262,"\n\n[https://github.com/vulhub/vulhub/blob/master/README.zh-cn.md](https://github.com/vulhub/vulhub/blob/master/README.zh-cn.md)"]],[1262,1262],[1387,1387]]],[1566725090142,["whale@Whale",[[1,1036,"\n"]],[1035,1035],[1036,1036]]],[1566725092727,["whale@Whale",[[1,1036,"## 命令"]],[1036,1036],[1041,1041]]],[1566725099230,["whale@Whale",[[1,1039,"compose"]],[1039,1039],[1046,1046]]],[1566725104793,["whale@Whale",[[1,1051,"#"]],[1051,1051],[1052,1052]]],[1566725107554,["whale@Whale",[[1,1088,"#"]],[1088,1088],[1089,1089]]],[1566725171980,[null,[[-1,1172,"\n"],[1,1265,"\n"],[-1,1277,"\n"]],[1172,1172],[1277,1277]]],[1566725171980,[null,[[1,1172,"\n"],[-1,1264,"\n"],[1,1277,"\n"]],[1277,1277],[1172,1172]]],[1566725111288,["whale@Whale",[[1,1145,"#"]],[1145,1145],[1146,1146]]],[1566725114415,["whale@Whale",[[1,1175,"#"]],[1175,1175],[1176,1176]]],[1566725142532,["whale@Whale",[[1,1268,"#"]],[1268,1268],[1269,1269]]],[1566725153118,["whale@Whale",[[-1,1282,"https://github.com/"],[-1,1307,"/vulhub/blob/master/README.zh-cn.md"],[1,1342,"使用指南"]],[1282,1342],[1292,1292]]],[1566725414999,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1281,"\n/"],[1,1283,"["],[1,1288,"b"],[-1,1292,"d"]],[1173,1173],[1292,1292]]],[1566725414999,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1281,"\n/"],[-1,1281,"["],[-1,1287,"b"],[1,1292,"d"]],[1292,1292],[1173,1173]]],[1566725370725,["whale@Whale",[[1,1281,"\n"]],[1280,1280],[1281,1281]]],[1566725372681,["whale@Whale",[[1,1281,"hao"]],[1281,1281],[1284,1284]]],[1566725373276,["whale@Whale",[[-1,1281,"hao"]],[1284,1284],[1281,1281]]],[1566725408167,["whale@Whale",[[1,1281,"好了，刚刚我们已经介绍了docker compose的使用，那么用vulhub来搭建漏洞环境也是顺手的事情了"]],[1281,1281],[1335,1335]]],[1566726565995,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1336,"\n/"],[1,1338,"["],[1,1343,"b"],[-1,1347,"d"]],[1173,1173],[1347,1347]]],[1566726565995,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1336,"\n/"],[-1,1336,"["],[-1,1342,"b"],[1,1347,"d"]],[1347,1347],[1173,1173]]],[1566726509453,["whale@Whale",[[-1,1329,"顺手"]],[1331,1331],[1329,1329]]],[1566726512575,["whale@Whale",[[1,1329,"得心应手"]],[1329,1329],[1333,1333]]],[1566726515857,["whale@Whale",[[1,1413,"\n"]],[1412,1412],[1413,1413]]],[1566726516037,["whale@Whale",[[1,1414,"\n"]],[1413,1413],[1414,1414]]],[1566726626005,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1338,"\n/"],[1,1340,"["],[1,1345,"b"],[-1,1349,"d"]],[1173,1173],[1349,1349]]],[1566726626005,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1338,"\n/"],[-1,1338,"["],[-1,1344,"b"],[1,1349,"d"]],[1349,1349],[1173,1173]]],[1566726605762,["whale@Whale",[[1,1415,"![8]($res/8.PNG)\n\n"]],[1414,1414],[1432,1432]]],[1566726608082,["whale@Whale",[[-1,1414,"\n"]],[1414,1414],[1413,1413]]],[1566726610001,["whale@Whale",[[1,1414,"\n"]],[1413,1413],[1414,1414]]],[1566726623522,["whale@Whale",[[1,1414,"下载"]],[1414,1414],[1416,1416]]],[1566726686003,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1338,"\n/"],[1,1340,"["],[1,1345,"b"],[-1,1349,"d"],[1,1414,"\n"],[-1,1433,"\n"]],[1173,1173],[1433,1433]]],[1566726686003,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1338,"\n/"],[-1,1338,"["],[-1,1344,"b"],[1,1349,"d"],[-1,1413,"\n"],[1,1433,"\n"]],[1433,1433],[1173,1173]]],[1566726627365,["whale@Whale",[[-1,1414,"下载"]],[1416,1416],[1414,1414]]],[1566726659340,["whale@Whale",[[1,1414,"按照上述链接中，下载该项目，切换到项目，用docker c"]],[1414,1414],[1443,1443]]],[1566726660568,["whale@Whale",[[-1,1441," c"]],[1443,1443],[1441,1441]]],[1566726665182,["whale@Whale",[[1,1441,"-compose build，"]],[1441,1441],[1456,1456]]],[1566726866019,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1338,"\n/"],[1,1340,"["],[1,1345,"b"],[-1,1349,"d"],[1,1413,"\n"],[-1,1473,"\n"],[1,1474,""]],[1173,1173],[1474,1474]]],[1566726866020,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1338,"\n/"],[-1,1338,"["],[-1,1344,"b"],[1,1349,"d"],[-1,1412,"\n"],[1,1473,"\n"],[-1,1473,""]],[1474,1474],[1173,1173]]],[1566726864578,["whale@Whale",[[-1,1449," build，"]],[1456,1456],[1449,1449]]],[1566726865655,["whale@Whale",[[1,1449,"bi"]],[1449,1449],[1451,1451]]],[1566726865911,["whale@Whale",[[-1,1450,"i"]],[1451,1451],[1450,1450]]],[1566726927012,[null,[[-1,1173,"\n"],[1,1267,"\n"],[-1,1338,"\n/"],[1,1340,"["],[1,1345,"b"],[-1,1349,"d"],[1,1413,"\n"],[-1,1467,"\n"],[1,1468,""]],[1173,1173],[1468,1468]]],[1566726927012,[null,[[1,1173,"\n"],[-1,1266,"\n"],[1,1338,"\n/"],[-1,1338,"["],[-1,1344,"b"],[1,1349,"d"],[-1,1412,"\n"],[1,1467,"\n"],[-1,1467,""]],[1468,1468],[1173,1173]]],[1566726866113,["whale@Whale",[[-1,1449,"b"]],[1450,1450],[1449,1449]]],[1566726880373,["whale@Whale",[[1,1449,"下载必须的容器运行，即可。"]],[1449,1449],[1462,1462]]],[1566726882035,["whale@Whale",[[1,1481,"\n"]],[1479,1479],[1480,1480]]],[1566726882216,["whale@Whale",[[1,1482,"\n"]],[1480,1480],[1481,1481]]]]]]}