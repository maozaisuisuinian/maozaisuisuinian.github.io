{"compress":true,"commitItems":[["56beb512-bea8-4f50-8f1f-bc22eb367721",1572343140969,"",[[1572343099024,["whale@Whale",[[1,0,"面试题\n===\n\n\n# TCP 为什么三次握手而不是两次握手"]],[0,0],[30,30]]],[1572343102294,["whale@Whale",[[1,11,"#"]],[11,11],[12,12]]],[1572343129011,["whale@Whale",[[1,31,"\n\n"]],[31,31],[32,32]]],[1572343129187,["whale@Whale",[[1,33,"\n"]],[32,32],[33,33]]],[1572343129432,["whale@Whale",[[1,33,"为了实现可靠数据传输， TCP 协议的通信双方， 都必须维护一个序列号， 以标识发送出去的数据包中， 哪些是已经被对方收到的。 三次握手的过程即是通信双方相互告知序列号起始值， 并确认对方已经收到了序列号起始值的必经步骤\r\n如果只是两次握手， 至多只有连接发起方的起始序列号能被确认， 另一方选择的序列号则得不到确认\r\n————————————————\r\n版权声明：本文为CSDN博主「萧萧冷」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/lengxiao1993/article/details/82771768"]],[33,33],[339,339]]],[1572343133846,["whale@Whale",[[-1,143,"\r"],[-1,191,"\r"],[-1,193,"————————————————\r\n版权声明：本文为CSDN博主「萧萧冷」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。\r\n原文链接：https://blog.csdn.net/lengxiao1993/article/details/82771768"]],[191,335],[191,191]]],[1572343180267,["whale@Whale",[[1,33,"\n"]],[32,32],[33,33]]],[1572343180493,["whale@Whale",[[1,33,"https://blog.csdn.net/lengxiao1993/article/details/82771768"]],[33,33],[92,92]]],[1572343242978,["whale@Whale",[[1,93,"\n"]],[93,93],[94,94]]],[1572343245436,["whale@Whale",[[1,157,"为了实现可靠传输，发送方和接收方始终需要同步( **SYN**chronize )序号。"]],[157,157],[201,201]]],[1572343247386,["whale@Whale",[[1,201,"\n"]],[201,201],[202,202]]],[1572343247826,["whale@Whale",[[1,202,"\n"]],[202,202],[203,203]]],[1572343251857,["whale@Whale",[[1,251,"\n"]],[250,250],[251,251]]],[1572343325577,["whale@Whale",[[1,204,"\\"]],[204,204],[205,205]]],[1572343335379,["whale@Whale",[[-1,203," \\三次握手的过程即是通信双方相互告知序列号起始值， 并确认对方已经收到了序列号起始值的必经步骤"]],[205,205],[203,203]]],[1572343335802,["whale@Whale",[[-1,204,"\n"]],[203,203],[202,202]]],[1572343336122,["whale@Whale",[[-1,203,"\n"]],[202,202],[201,201]]],[1572343427480,["whale@Whale",[[1,251,"\n"]],[249,249],[250,250]]],[1572343427800,["whale@Whale",[[1,252,"\n"]],[250,250],[251,251]]],[1572343429008,["whale@Whale",[[1,251,"ke"]],[251,251],[253,253]]],[1572343429525,["whale@Whale",[[-1,251,"ke"]],[253,253],[251,251]]],[1572343437604,["whale@Whale",[[1,251,"客户端发送一个请求，服务器"]],[251,251],[264,264]]],[1572343439672,["whale@Whale",[[1,261,"\n"]],[261,261],[262,262]]],[1572343443323,["whale@Whale",[[1,265,"回复"]],[265,265],[267,267]]],[1572343443916,["whale@Whale",[[-1,265,"回复"]],[267,267],[265,265]]],[1572343445403,["whale@Whale",[[1,265,"给"]],[265,265],[266,266]]],[1572343447285,["whale@Whale",[[-1,265,"给"]],[266,266],[265,265]]],[1572343452913,["whale@Whale",[[1,265,"回复一份序列号；"]],[265,265],[273,273]]],[1572343453566,["whale@Whale",[[-1,272,"；"]],[273,273],[272,272]]],[1572343453997,["whale@Whale",[[1,272,"。"]],[272,272],[273,273]]],[1572343454384,["whale@Whale",[[1,275,"\n"]],[273,273],[274,274]]],[1572343454824,["whale@Whale",[[-1,275,"\n"]],[274,274],[273,273]]],[1572343455022,["whale@Whale",[[-1,272,"。"]],[273,273],[272,272]]],[1572343455968,["whale@Whale",[[1,272,"，"]],[272,272],[273,273]]],[1572343456336,["whale@Whale",[[1,275,"\n"]],[273,273],[274,274]]],[1572343466582,["whale@Whale",[[1,274,"客户端发送我收到了序列号。"]],[274,274],[287,287]]],[1572354413879,["whale@Whale",[[1,8,"## 引子"]],[8,8],[13,13]]],[1572354414096,["whale@Whale",[[1,15,"\n"]],[13,13],[14,14]]],[1572354426086,["whale@Whale",[[1,14,"所有打不到我的，都使我更加强大。。"]],[14,14],[31,31]]],[1572354429214,["whale@Whale",[[1,312,"\n"]],[311,311],[312,312]]],[1572354430524,["whale@Whale",[[-1,312,"\n"],[1,313,"## "]],[312,312],[315,315]]],[1572354631820,["whale@Whale",[[1,315,"对浏览器同源策略的了解"]],[315,315],[326,326]]],[1572354632237,["whale@Whale",[[1,326,"\n\n"]],[326,326],[327,327]]]]],["d9139ab5-4216-41cd-ae6f-87dcfa9fdccb",1572416257978,"面试题\n===\n## 引子\n所有打不到我的，都使我更加强大。。\n\n## TCP 为什么三次握手而不是两次握手\n\nhttps://blog.csdn.net/lengxiao1993/article/details/82771768\n\n为了实现可靠数据传输， TCP 协议的通信双方， 都必须维护一个序列号， 以标识发送出去的数据包中， 哪些是已经被对方收到的。为了实现可靠传输，发送方和接收方始终需要同步( **SYN**chronize )序号。\n\n如果只是两次握手， 至多只有连接发起方的起始序列号能被确认， 另一方选择的序列号则得不到确认\n\n客户端发送一个请求，\n服务器回复一份序列号，\n客户端发送我收到了序列号。\n\n## 对浏览器同源策略的了解\n\n",[[1572416204974,["whale@Whale",[[-1,315,"对"]],[316,316],[315,315]]],[1572416206657,["whale@Whale",[[-1,322,"的了解"]],[325,325],[322,322]]],[1572416631774,["whale@Whale",[[1,324,"\n"]],[322,322],[323,323]]],[1572416632020,["whale@Whale",[[1,325,"\n"]],[323,323],[324,324]]],[1572416633098,["whale@Whale",[[1,324,"###"]],[324,324],[327,327]]],[1572416633937,["whale@Whale",[[-1,326,"#"]],[327,327],[326,326]]],[1572416640159,["whale@Whale",[[1,326," 工作组和域名"]],[326,326],[333,333]]],[1572416640196,["whale@Whale",[[-1,332,"名"]],[333,333],[332,332]]],[1572416641587,["whale@Whale",[[1,332,"的区别"]],[332,332],[335,335]]],[1572416641777,["whale@Whale",[[1,337,"\n"]],[335,335],[336,336]]],[1572416645962,["whale@Whale",[[1,336,"1. 大小"]],[336,336],[341,341]]],[1572416646235,["whale@Whale",[[1,343,"\n"]],[341,341],[342,342]]],[1572416657901,["whale@Whale",[[1,342,"工作组比较小，不超过20台，"]],[342,342],[356,356]]],[1572416659745,["whale@Whale",[[-1,355,"，"]],[356,356],[355,355]]],[1572416665734,["whale@Whale",[[1,355,"。域名"]],[355,355],[358,358]]],[1572416665841,["whale@Whale",[[-1,357,"名"]],[358,358],[357,357]]],[1572416679330,["whale@Whale",[[1,357,"用在比较大的网络，成百上千台。"]],[357,357],[372,372]]],[1572416681929,["whale@Whale",[[1,374,"\n"]],[372,372],[373,373]]],[1572416683951,["whale@Whale",[[1,373,"2."]],[373,373],[375,375]]],[1572416687346,["whale@Whale",[[1,375," 拓扑图"]],[375,375],[379,379]]],[1572416687376,["whale@Whale",[[1,381,"\n"]],[379,379],[380,380]]],[1572416716498,["whale@Whale",[[1,380,"工作组中，所有机器的地位是平等的，一台计算机可以自由的加入或退出一个工作组。"]],[380,380],[418,418]]],[1572416720372,["whale@Whale",[[1,420,"\n"]],[418,418],[419,419]]],[1572416726733,["whale@Whale",[[1,419,"3. 验证方式"]],[419,419],[426,426]]],[1572416726980,["whale@Whale",[[1,428,"\n"]],[426,426],[427,427]]],[1572416739340,["whale@Whale",[[1,427,"在工作组中，用户名、密码存放在本地计算机"]],[427,427],[447,447]]],[1572416749826,["whale@Whale",[[1,447,"。在域名"]],[447,447],[451,451]]],[1572416750264,["whale@Whale",[[-1,450,"名"]],[451,451],[450,450]]],[1572416758387,["whale@Whale",[[1,450,"中，有一台域控（DC)"]],[450,450],[461,461]]],[1572416760183,["whale@Whale",[[-1,460,")"]],[461,461],[460,460]]],[1572416780221,["whale@Whale",[[1,460,"）服务器，其他计算机都要通过DC验证才能加入域名"]],[460,460],[484,484]]],[1572416780286,["whale@Whale",[[-1,483,"名"]],[484,484],[483,483]]],[1572416800601,["whale@Whale",[[1,483,"。如果要"]],[483,483],[487,487]]],[1572416803907,["whale@Whale",[[-1,486,"要"]],[487,487],[486,486]]],[1572416804572,["whale@Whale",[[-1,484,"如果"]],[486,486],[484,484]]],[1572416821457,["whale@Whale",[[1,448,"如果要登入其他计算机，必须提供用户名，密码。"]],[448,448],[470,470]]],[1572416822079,["whale@Whale",[[1,470,"\n"]],[470,470],[471,471]]],[1572416823168,["whale@Whale",[[-1,470,"\n"]],[471,471],[470,470]]],[1572416824047,["whale@Whale",[[-1,469,"。"]],[470,470],[469,469]]],[1572416824386,["whale@Whale",[[1,469,"；"]],[469,469],[470,470]]],[1572416879489,["whale@Whale",[[1,506,"与域名"]],[506,506],[509,509]]],[1572416879645,["whale@Whale",[[-1,508,"名"]],[509,509],[508,508]]],[1572416888899,["whale@Whale",[[1,508,"权限，可以登入任何域名"]],[508,508],[519,519]]],[1572416888991,["whale@Whale",[[-1,518,"名"]],[519,519],[518,518]]],[1572416896242,["whale@Whale",[[1,518,"内计算机，无需体用"]],[518,518],[527,527]]],[1572416897886,["whale@Whale",[[-1,523,"无需体用"]],[527,527],[523,523]]],[1572416905006,["whale@Whale",[[1,523,"无需知道计算机的账号。"]],[523,523],[534,534]]],[1572416905768,["whale@Whale",[[-1,533,"。"]],[534,534],[533,533]]],[1572416907882,["whale@Whale",[[1,533,"也可以登入。"]],[533,533],[539,539]]],[1572416914447,["whale@Whale",[[-1,506,"与"]],[507,507],[506,506]]],[1572416915685,["whale@Whale",[[1,506,"有"]],[506,506],[507,507]]],[1572416929748,["whale@Whale",[[-1,540,"\n"],[1,541,"4. 网络"]],[540,540],[545,545]]],[1572416930107,["whale@Whale",[[1,545,"\n\n"]],[545,545],[546,546]]],[1572416946284,["whale@Whale",[[-1,546,"\n"],[1,547,"工作组计算机必须在同一个子网中；域控"]],[546,546],[564,564]]],[1572416946395,["whale@Whale",[[-1,563,"控"]],[564,564],[563,563]]],[1572416958398,["whale@Whale",[[1,563,"的计算机可以在不同的本地网络中。"]],[563,563],[579,579]]],[1572416966706,["whale@Whale",[[1,579,"\n\n"]],[579,579],[580,580]]],[1572416968490,["whale@Whale",[[1,581,"\n"]],[580,580],[581,581]]],[1572416984989,["whale@Whale",[[-1,581,"\n"],[1,582,"## 正向代理"]],[581,581],[588,588]]],[1572416988776,["whale@Whale",[[1,588,"和反向代理的区别"]],[588,588],[596,596]]],[1572416989158,["whale@Whale",[[1,596,"\n\n"]],[596,596],[597,597]]],[1572416992900,["whale@Whale",[[-1,597,"\n"],[1,598,"1"]],[597,597],[598,598]]],[1572416993428,["whale@Whale",[[-1,597,"1"],[1,598,"\n"]],[598,598],[597,597]]],[1572416995583,["whale@Whale",[[-1,597,"\n"]],[597,597],[0,0]]],[1572416995926,["whale@Whale",[[1,596,"z"]],[0,0],[596,597]]],[1572416997370,["whale@Whale",[[-1,596,"z"]],[596,597],[596,596]]],[1572416997768,["whale@Whale",[[1,597,"\n"]],[596,596],[597,597]]],[1572417004622,["whale@Whale",[[-1,597,"\n"],[1,598,"正向代理是对服务器"]],[597,597],[606,606]]],[1572417007196,["whale@Whale",[[-1,601,"是"]],[602,602],[601,601]]],[1572417008040,["whale@Whale",[[1,601,"："]],[601,601],[602,602]]],[1572417016509,["whale@Whale",[[1,606,"来说，客户端是透明的"]],[606,606],[616,616]]],[1572417020312,["whale@Whale",[[1,616,"\n\n"]],[616,616],[617,617]]],[1572417039133,["whale@Whale",[[-1,617,"\n"],[1,618,"反向代理：对客户端来说，服务端是位置的"]],[617,617],[636,636]]],[1572417041341,["whale@Whale",[[-1,613,"透明的"]],[616,616],[613,613]]],[1572417043114,["whale@Whale",[[1,613,"为止"]],[613,613],[615,615]]],[1572417044123,["whale@Whale",[[-1,613,"为止"]],[615,615],[613,613]]],[1572417061444,["whale@Whale",[[1,613,"透明的（未知的）。比如说翻墙使用的ss"]],[613,613],[632,632]]],[1572417062132,["whale@Whale",[[-1,630,"ss"]],[632,632],[630,630]]],[1572417065125,["whale@Whale",[[1,630,"ger"]],[630,630],[633,633]]],[1572417065738,["whale@Whale",[[-1,630,"ger"]],[633,633],[630,630]]],[1572417103364,["whale@Whale",[[1,630,"个人专用服务器，就是正向代理，代理替客户端取回google上的资料，而服务器"]],[630,630],[668,668]]],[1572417117310,["whale@Whale",[[1,668,"只知道代理服务器，不知道客户端"]],[668,668],[683,683]]],[1572417118258,["whale@Whale",[[-1,680,"客户端"]],[683,683],[680,680]]],[1572417122807,["whale@Whale",[[1,680,"是哪个客户端。"]],[680,680],[687,687]]],[1572417130158,["whale@Whale",[[1,676,"取得了资料"]],[676,676],[681,681]]],[1572417132857,["whale@Whale",[[1,693,"\n"]],[692,692],[693,693]]],[1572417135562,["whale@Whale",[[-1,710,"位置的"]],[713,713],[710,710]]],[1572417152174,["whale@Whale",[[1,710,"未知的。比如说nginx就是"]],[710,710],[724,724]]],[1572417154232,["whale@Whale",[[-1,722,"就是"]],[724,724],[722,722]]],[1572417163091,["whale@Whale",[[1,722,"可以做负载分流"]],[722,722],[729,729]]],[1572417224303,["whale@Whale",[[1,729,"作用的反向代理服务器，作用是当有很多请求的时候，它会将请求分流，发送到"]],[729,729],[764,764]]],[1572417270066,["whale@Whale",[[1,764,"不同的服务器，防止单台服务器因为过载而崩溃。于是客户端只知道反向代理服务器替我们取回了请求的资料"]],[764,764],[812,812]]],[1572417270757,["whale@Whale",[[-1,810,"资料"]],[812,812],[810,810]]],[1572417278183,["whale@Whale",[[1,810,"资源，而不知道那台服务器"]],[810,810],[822,822]]],[1572417278803,["whale@Whale",[[-1,819,"服务器"]],[822,822],[819,819]]],[1572417282917,["whale@Whale",[[1,819,"具体是哪台"]],[819,819],[824,824]]],[1572417290137,["whale@Whale",[[1,824,"服务端发送的。"]],[824,824],[831,831]]],[1572417295222,["whale@Whale",[[1,794,"**"]],[794,794],[796,796]]],[1572417298088,["whale@Whale",[[1,803,"**"]],[803,803],[805,805]]],[1572417301216,["whale@Whale",[[1,835,"\n\n"]],[835,835],[836,836]]],[1572417302219,["whale@Whale",[[1,837,"\n"]],[836,836],[837,837]]],[1572417404445,["whale@Whale",[[-1,837,"\n"],[1,838,"## redis未授权的利用过程"]],[837,837],[853,853]]],[1572417435474,["whale@Whale",[[1,853,"\n\n"]],[853,853],[854,854]]],[1572417435641,["whale@Whale",[[1,855,"\n"]],[854,854],[855,855]]],[1572417442509,["whale@Whale",[[-1,855,"\n"],[1,856,"## csrf和ssrf的区别"]],[855,855],[870,870]]],[1572417442874,["whale@Whale",[[1,870,"\n\n"]],[870,870],[871,871]]],[1572417443453,["whale@Whale",[[1,872,"\n"]],[871,871],[872,872]]],[1572417450460,["whale@Whale",[[-1,872,"\n"],[1,873,"## sql宽字节注入"]],[872,872],[883,883]]],[1572417686319,["whale@Whale",[[1,883,"\n\n"]],[883,883],[884,884]]],[1572417696664,["whale@Whale",[[-1,884,"\n"],[1,885,"在cms中，对sqlz"]],[884,884],[895,895]]],[1572417698134,["whale@Whale",[[-1,894,"z"]],[895,895],[894,894]]],[1572417704869,["whale@Whale",[[1,894,"注入使用了addslac"]],[894,894],[906,906]]],[1572417705167,["whale@Whale",[[-1,905,"c"]],[906,906],[905,905]]],[1572417705397,["whale@Whale",[[1,905,"s"]],[905,905],[906,906]]],[1572417717163,["whale@Whale",[[1,906,"hes函数，对输入的参数进行了转移"]],[906,906],[923,923]]],[1572417718396,["whale@Whale",[[-1,921,"转移"]],[923,923],[921,921]]],[1572417749262,["whale@Whale",[[1,921,"转义，单引号前加上反斜杠进行转移"]],[921,921],[937,937]]],[1572417751068,["whale@Whale",[[-1,935,"转移"]],[937,937],[935,935]]],[1572417755762,["whale@Whale",[[1,935,"转义。"]],[935,935],[938,938]]],[1572417757661,["whale@Whale",[[1,938,"\n\n"]],[938,938],[939,939]]],[1572417758848,["whale@Whale",[[-1,939,"\n"]],[939,939],[938,938]]],[1572417759411,["whale@Whale",[[1,939,"\n"]],[938,938],[939,939]]],[1572417759685,["whale@Whale",[[1,940,"\n"]],[939,939],[940,940]]],[1572417765607,["whale@Whale",[[-1,940,"\n"],[1,941,"在mysql中，使用"]],[940,940],[950,950]]],[1572417766800,["whale@Whale",[[1,950,"GBk"]],[950,950],[953,953]]],[1572417767493,["whale@Whale",[[-1,952,"k"]],[953,953],[952,952]]],[1572417793801,["whale@Whale",[[1,952,"K编码，认为2个字符是一个汉字。在前面加%a1等字符，是的"]],[952,952],[981,981]]],[1572417794497,["whale@Whale",[[-1,979,"是的"]],[981,981],[979,979]]],[1572417795864,["whale@Whale",[[1,979,"使得"]],[979,979],[981,981]]],[1572417796193,["whale@Whale",[[-1,980,"得"]],[981,981],[980,980]]],[1572417822747,["whale@Whale",[[1,980,"前面字符和反斜杠能够组合为一个汉字，于是反斜杠就不能对单引号进行转义了。"]],[980,980],[1016,1016]]],[1572417892044,["whale@Whale",[[1,1016,"\n\n"]],[1016,1016],[1017,1017]]],[1572417892222,["whale@Whale",[[1,1018,"\n"]],[1017,1017],[1018,1018]]],[1572417893112,["whale@Whale",[[1,1018,"问了逻辑漏洞，sql宽字节注入，正向代理/反向代理区别，cobalt strike的代理，redis未授权，csrf和ssrf区别，问到不会为止；"]],[1018,1018],[1091,1091]]],[1572417898059,["whale@Whale",[[-1,1018,"问了逻辑漏洞，sql宽字节注入，正向代理/反向代理区别，"]],[1018,1046],[1018,1018]]],[1572417898860,["whale@Whale",[[1,1018,"\n"]],[1018,1018],[1019,1019]]],[1572418057620,["whale@Whale",[[-1,312,"## 浏览器同源策略\n"]],[312,323],[312,312]]],[1572418059372,["whale@Whale",[[-1,312,"\n"]],[312,312],[311,311]]],[1572418062871,["whale@Whale",[[1,1006,"## 浏览器同源策略\n"]],[1006,1006],[1017,1017]]],[1572418065116,["whale@Whale",[[1,1018,"\n"]],[1017,1017],[1018,1018]]],[1572418066917,["whale@Whale",[[1,1018,"##"]],[1018,1018],[1020,1020]]],[1572418068057,["whale@Whale",[[1,1020," "]],[1020,1020],[1021,1021]]],[1572418069456,["whale@Whale",[[-1,1021,"\n"]],[1022,1022],[1021,1021]]],[1572418071352,["whale@Whale",[[1,1037,"\n"]],[1037,1037],[1038,1038]]],[1572418074598,["whale@Whale",[[-1,1038,"，redis未授权，csrf和ssrf区别，问到不会为止；"]],[1038,1067],[1038,1038]]],[1572418080286,["whale@Whale",[[-1,825,"## redis未授权的利用过程\n\n## csrf和ssrf的区别\n"]],[824,858],[824,824]]],[1572418080824,["whale@Whale",[[-1,825,"\n"]],[824,824],[823,823]]],[1572418083469,["whale@Whale",[[1,1004,"\n"]],[1002,1002],[1003,1003]]],[1572418083674,["whale@Whale",[[1,1005,"\n"]],[1003,1003],[1004,1004]]],[1572418085267,["whale@Whale",[[1,1004,"## redis未授权的利用过程\n\n## csrf和ssrf的区别\n"]],[1003,1003],[1037,1037]]],[1572418098546,["whale@Whale",[[1,1040,"\n"]],[1038,1038],[1039,1039]]],[1572418105490,["whale@Whale",[[1,1039,"## 有哪些逻辑漏洞"]],[1039,1039],[1049,1049]]],[1572419544762,["whale@Whale",[[1,1021,"linux上好像是 写公钥，利用web服务写马，contrab定时任务"]],[1021,1021],[1056,1056]]],[1572419545497,["whale@Whale",[[1,1057,"\n"]],[1056,1056],[1057,1057]]],[1572419551958,["whale@Whale",[[1,1057,"然后windows是利用自启动服务，还有web服务，没有web服务就只能重启"]],[1057,1057],[1095,1095]]]]],["2be55b13-3e68-40d2-bb66-a8d6582fd112",1589359955461,"面试题\n===\n## 引子\n所有打不到我的，都使我更加强大。。\n\n## TCP 为什么三次握手而不是两次握手\n\nhttps://blog.csdn.net/lengxiao1993/article/details/82771768\n\n为了实现可靠数据传输， TCP 协议的通信双方， 都必须维护一个序列号， 以标识发送出去的数据包中， 哪些是已经被对方收到的。为了实现可靠传输，发送方和接收方始终需要同步( **SYN**chronize )序号。\n\n如果只是两次握手， 至多只有连接发起方的起始序列号能被确认， 另一方选择的序列号则得不到确认\n\n客户端发送一个请求，\n服务器回复一份序列号，\n客户端发送我收到了序列号。\n\n## 工作组和域的区别\n1. 大小\n工作组比较小，不超过20台。域用在比较大的网络，成百上千台。\n2. 拓扑图\n工作组中，所有机器的地位是平等的，一台计算机可以自由的加入或退出一个工作组。\n3. 验证方式\n在工作组中，用户名、密码存放在本地计算机。如果要登入其他计算机，必须提供用户名，密码；在域中，有一台域控（DC）服务器，其他计算机都要通过DC验证才能加入域。有域权限，可以登入任何域内计算机，无需知道计算机的账号也可以登入。\n4. 网络\n工作组计算机必须在同一个子网中；域的计算机可以在不同的本地网络中。\n\n## 正向代理和反向代理的区别\n正向代理：对服务器来说，客户端是透明的（未知的）。比如说翻墙使用的个人专用服务器，就是正向代理，代理替客户端取回google上的资料，而服务器只知道代理服务器取得了资料，不知道是哪个客户端。\n\n反向代理：对客户端来说，服务端是未知的。比如说nginx可以做负载分流作用的反向代理服务器，作用是当有很多请求的时候，它会将请求分流，发送到不同的服务器，防止单台服务器因为过载而崩溃。于是客户端只知道**反向代理服务器**替我们取回了请求的资源，而不知道那台具体是哪台服务端发送的。\n\n## sql宽字节注入\n在cms中，对sql注入使用了addslashes函数，对输入的参数进行了转义，单引号前加上反斜杠进行转义。\n\n在mysql中，使用GBK编码，认为2个字符是一个汉字。在前面加%a1等字符，使前面字符和反斜杠能够组合为一个汉字，于是反斜杠就不能对单引号进行转义了。\n\n## 浏览器同源策略\n\n## cobalt strike的代理\n\n## redis未授权的利用过程\nlinux上好像是 写公钥，利用web服务写马，contrab定时任务\n然后windows是利用自启动服务，还有web服务，没有web服务就只能重启\n## csrf和ssrf的区别\n\n## 有哪些逻辑漏洞\n\n",[[1589359948790,["whale@Whale",[[-1,18,"到"]],[19,19],[18,18]]],[1589359953988,["whale@Whale",[[1,18,"倒了"]],[18,18],[20,20]]],[1589359954112,["whale@Whale",[[-1,19,"了"]],[20,20],[19,19]]]]],["5fd9ac1e-26a7-4101-8965-0ec1a09aab18",1589857882526,"面试题\n===\n## 引子\n所有打不倒我的，都使我更加强大。。\n\n## TCP 为什么三次握手而不是两次握手\n\nhttps://blog.csdn.net/lengxiao1993/article/details/82771768\n\n为了实现可靠数据传输， TCP 协议的通信双方， 都必须维护一个序列号， 以标识发送出去的数据包中， 哪些是已经被对方收到的。为了实现可靠传输，发送方和接收方始终需要同步( **SYN**chronize )序号。\n\n如果只是两次握手， 至多只有连接发起方的起始序列号能被确认， 另一方选择的序列号则得不到确认\n\n客户端发送一个请求，\n服务器回复一份序列号，\n客户端发送我收到了序列号。\n\n## 工作组和域的区别\n1. 大小\n工作组比较小，不超过20台。域用在比较大的网络，成百上千台。\n2. 拓扑图\n工作组中，所有机器的地位是平等的，一台计算机可以自由的加入或退出一个工作组。\n3. 验证方式\n在工作组中，用户名、密码存放在本地计算机。如果要登入其他计算机，必须提供用户名，密码；在域中，有一台域控（DC）服务器，其他计算机都要通过DC验证才能加入域。有域权限，可以登入任何域内计算机，无需知道计算机的账号也可以登入。\n4. 网络\n工作组计算机必须在同一个子网中；域的计算机可以在不同的本地网络中。\n\n## 正向代理和反向代理的区别\n正向代理：对服务器来说，客户端是透明的（未知的）。比如说翻墙使用的个人专用服务器，就是正向代理，代理替客户端取回google上的资料，而服务器只知道代理服务器取得了资料，不知道是哪个客户端。\n\n反向代理：对客户端来说，服务端是未知的。比如说nginx可以做负载分流作用的反向代理服务器，作用是当有很多请求的时候，它会将请求分流，发送到不同的服务器，防止单台服务器因为过载而崩溃。于是客户端只知道**反向代理服务器**替我们取回了请求的资源，而不知道那台具体是哪台服务端发送的。\n\n## sql宽字节注入\n在cms中，对sql注入使用了addslashes函数，对输入的参数进行了转义，单引号前加上反斜杠进行转义。\n\n在mysql中，使用GBK编码，认为2个字符是一个汉字。在前面加%a1等字符，使前面字符和反斜杠能够组合为一个汉字，于是反斜杠就不能对单引号进行转义了。\n\n## 浏览器同源策略\n\n## cobalt strike的代理\n\n## redis未授权的利用过程\nlinux上好像是 写公钥，利用web服务写马，contrab定时任务\n然后windows是利用自启动服务，还有web服务，没有web服务就只能重启\n## csrf和ssrf的区别\n\n## 有哪些逻辑漏洞\n\n",[[1589857843307,["whale@Whale",[[-1,284,"\n"]],[284,284],[284,284]]],[1589857845228,["whale@Whale",[[-1,295,"\n"]],[295,295],[295,295]]],[1589857972127,["whale@Whale",[[1,1094,"\n"]],[1094,1094],[1095,1095]]],[1589857978707,["whale@Whale",[[-1,969,"## 浏览器同源策略\n"]],[969,980],[969,969]]],[1589857980244,["whale@Whale",[[1,969,"、"]],[969,969],[970,970]]],[1589857981020,["whale@Whale",[[-1,969,"、"]],[970,970],[969,969]]],[1589857981205,["whale@Whale",[[-1,969,"\n"]],[969,969],[968,968]]],[1589857983848,["whale@Whale",[[1,1112,"\n"]],[1111,1111],[1112,1112]]],[1589857984802,["whale@Whale",[[1,1112,"## 浏览器同源策略\n"]],[1112,1112],[1123,1123]]],[1589858058608,["whale@Whale",[[1,1124,"![1]($res/1.jpg)\n\n"]],[1123,1123],[1141,1141]]],[1589858165323,["whale@Whale",[[-1,14,"所有打不倒我的，都使我更加强大。。"],[1,31,"y"]],[14,31],[14,15]]],[1589858165640,["whale@Whale",[[1,15,"o"]],[14,15],[14,16]]],[1589858165784,["whale@Whale",[[1,16,"u"]],[14,16],[14,17]]],[1589858166112,["whale@Whale",[[1,17,"'k"]],[14,17],[14,19]]],[1589858166259,["whale@Whale",[[1,19,"o"]],[14,19],[14,20]]],[1589858166335,["whale@Whale",[[1,20,"n"]],[14,20],[14,21]]],[1589858166373,["whale@Whale",[[1,21,"g"]],[14,21],[14,22]]],[1589858167215,["whale@Whale",[[1,22,"'z"]],[14,22],[14,24]]],[1589858167448,["whale@Whale",[[1,24,"a"]],[14,24],[14,25]]],[1589858167575,["whale@Whale",[[1,25,"i"]],[14,25],[14,26]]],[1589858168121,["whale@Whale",[[-1,14,"you'kong'zai"],[1,26,"有空再"]],[14,26],[14,17]]],[1589858180339,["whale@Whale",[[1,17,"写，没空就自己找答案吧。。"]],[17,17],[30,30]]],[1589859412823,["whale@Whale",[[-1,0,"面试题\n==="]],[0,7],[0,0]]]]]]}