{"compress":true,"commitItems":[["2c0310c2-6d35-48ea-858a-e8a8a7bffbc0",1527225018578,"",[[1527224999862,["whale@Whale",[[1,0,"\n![捕获]($res/%E6%8D%95%E8%8E%B7.PNG)\n"]],[0,0],[36,36]]],[1527225003226,["whale@Whale",[[1,0,"获取"]],[0,0],[2,2]]],[1527225004188,["whale@Whale",[[-1,0,"获取"]],[2,2],[0,0]]],[1527225012974,["whale@Whale",[[1,0,"递归获取此文件"]],[0,0],[7,7]]],[1527225014505,["whale@Whale",[[-1,5,"文件"]],[7,7],[5,5]]],[1527225018019,["whale@Whale",[[1,5,"目录下，"]],[5,5],[9,9]]],[1527225029229,["whale@Whale",[[1,9,"所有以md结尾的文件。"]],[9,9],[20,20]]],[1527225030219,["whale@Whale",[[1,56,"\n"]],[55,55],[56,56]]],[1527225030722,["whale@Whale",[[1,57,"\n"]],[56,56],[57,57]]],[1527225066737,["whale@Whale",[[1,58,"\n"]],[56,56],[57,57]]],[1527225067501,["whale@Whale",[[1,57,"find . -name \"*.md\" > find.txt\r\n"]],[57,57],[89,89]]],[1527225075378,["whale@Whale",[[-1,87,"\r"],[1,89,"将文件"]],[88,88],[91,91]]],[1527225081772,["whale@Whale",[[1,91,"的路径报错"]],[91,91],[96,96]]],[1527225082382,["whale@Whale",[[-1,94,"报错"]],[96,96],[94,94]]],[1527225085813,["whale@Whale",[[1,94,"保存为find.txt"]],[94,94],[105,105]]],[1527225086169,["whale@Whale",[[1,107,"\n"]],[105,105],[106,106]]],[1527225086361,["whale@Whale",[[1,108,"\n"]],[106,106],[107,107]]],[1527225097235,["whale@Whale",[[1,109,"\n"]],[106,106],[107,107]]],[1527225097801,["whale@Whale",[[1,107,"sed -i s/[[:space:]]//g find.txt\r\n"]],[107,107],[141,141]]],[1527225098962,["whale@Whale",[[-1,139,"\r\n"]],[141,141],[140,140]]],[1527225105207,["whale@Whale",[[1,140,"去掉文件名中的空格"]],[140,140],[149,149]]],[1527225105417,["whale@Whale",[[1,151,"\n"]],[149,149],[150,150]]],[1527225105627,["whale@Whale",[[1,152,"\n"]],[150,150],[151,151]]],[1527225115114,["whale@Whale",[[1,151,"for line in `cat find.txt`; do cp $line file/.; done\r\n"]],[151,151],[205,205]]],[1527226098613,[null,[[-1,203,"\r"],[1,204,"\n"]],[203,203],[205,205]]],[1527226098614,[null,[[1,203,"\r"],[-1,203,"\n"]],[205,205],[203,203]]],[1527226063042,["whale@Whale",[[-1,203,"\r"],[1,204,"\n"]],[203,203],[204,204]]],[1527226071673,["whale@Whale",[[1,204,"放弃上述的命令："]],[204,204],[212,212]]],[1527226072267,["whale@Whale",[[-1,211,"："]],[212,212],[211,211]]],[1527226072585,["whale@Whale",[[1,214,"\n"]],[211,211],[212,212]]],[1527226073583,["whale@Whale",[[1,212,"-"]],[212,212],[213,213]]],[1527226074035,["whale@Whale",[[-1,212,"-"]],[213,213],[212,212]]],[1527226074465,["whale@Whale",[[1,215,"\n"]],[212,212],[213,213]]],[1527226075190,["whale@Whale",[[1,213,"---"]],[213,213],[216,216]]],[1527226075433,["whale@Whale",[[1,219,"\n"]],[216,216],[217,217]]],[1527226085275,["whale@Whale",[[-1,219,"\n"]],[218,218],[217,217]]],[1527226086800,["whale@Whale",[[1,217,"参考{"]],[217,217],[220,220]]],[1527226087515,["whale@Whale",[[-1,219,"{"]],[220,220],[219,219]]],[1527226089050,["whale@Whale",[[1,219,"：https://blog.csdn.net/keypeople/article/details/78147288"]],[219,219],[276,276]]],[1527226715330,["whale@Whale",[[1,213,"\n"]],[212,212],[213,213]]],[1527226720178,["whale@Whale",[[1,213,"for line  "]],[213,213],[223,223]]],[1527226720697,["whale@Whale",[[1,224,"\n"]],[223,223],[224,224]]],[1527226726229,["whale@Whale",[[1,223,"in ``;"]],[223,223],[229,229]]],[1527226728314,["whale@Whale",[[1,231,"\n"]],[229,229],[230,230]]],[1527226729256,["whale@Whale",[[1,230,"done"]],[230,230],[234,234]]],[1527226729505,["whale@Whale",[[1,236,"\n"]],[234,234],[235,235]]],[1527226730032,["whale@Whale",[[-1,236,"\n"]],[235,235],[234,234]]],[1527226730455,["whale@Whale",[[-1,232,"ne"]],[234,234],[232,232]]],[1527226731193,["whale@Whale",[[1,234,"\n"]],[232,232],[233,233]]],[1527226790673,["whale@Whale",[[1,227,"foed"]],[227,227],[231,231]]],[1527226791641,["whale@Whale",[[-1,228,"oed"]],[231,231],[228,228]]],[1527226803096,["whale@Whale",[[1,228,"ind . -name \"*.md\" "]],[228,228],[247,247]]],[1527226803852,["whale@Whale",[[-1,246," "]],[247,247],[246,246]]],[1527226808585,["whale@Whale",[[1,254,"\n"]],[251,251],[252,252]]],[1527226886486,["whale@Whale",[[1,252,"sed -i s/[[:space:]]//g $il"]],[252,252],[279,279]]],[1527226887187,["whale@Whale",[[-1,277,"il"]],[279,279],[277,277]]],[1527226887863,["whale@Whale",[[1,277,"line"]],[277,277],[281,281]]],[1527226903819,["whale@Whale",[[1,284,"\n"]],[281,281],[282,282]]],[1527226906892,["whale@Whale",[[1,282,"cp $"]],[282,282],[286,286]]],[1527226907564,["whale@Whale",[[-1,285,"$"]],[286,286],[285,285]]],[1527226913658,["whale@Whale",[[1,285,"$linie"]],[285,285],[291,291]]],[1527226922672,["whale@Whale",[[-1,282,"cp"]],[284,284],[282,282]]],[1527226927550,["whale@Whale",[[1,282,"mv"]],[282,282],[284,284]]],[1527226933514,["whale@Whale",[[-1,255," -i"]],[258,258],[255,255]]],[1527226938580,["whale@Whale",[[1,252,"a=`"]],[252,252],[255,255]]],[1527226939890,["whale@Whale",[[1,281,"`"]],[281,281],[282,282]]],[1527226945203,["whale@Whale",[[-1,290,"ie"]],[292,292],[290,290]]],[1527226945751,["whale@Whale",[[1,290,"e"]],[290,290],[291,291]]],[1527226947998,["whale@Whale",[[-1,287,"line"]],[291,291],[287,287]]],[1527226951908,["whale@Whale",[[1,287,"line $a"]],[287,287],[294,294]]],[1527226952843,["whale@Whale",[[1,297,"\n"]],[294,294],[295,295]]],[1527226956736,["whale@Whale",[[1,295,"done"]],[295,295],[299,299]]],[1527227023925,["whale@Whale",[[1,286,"`"]],[286,286],[287,287]]],[1527227026002,["whale@Whale",[[1,292,"`"]],[292,292],[293,293]]],[1527227340985,["whale@Whale",[[1,369,"\n"]],[367,367],[368,368]]],[1527227341385,["whale@Whale",[[1,370,"\n"]],[368,368],[369,369]]],[1527227347222,["whale@Whale",[[1,370,"![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)\n\n"]],[369,369],[411,411]]],[1527227350502,["whale@Whale",[[1,369,"sha"]],[369,369],[372,372]]],[1527227351188,["whale@Whale",[[-1,369,"sha"]],[372,372],[369,369]]],[1527227358770,["whale@Whale",[[1,369,"删除所有空格"]],[369,369],[375,375]]],[1527228139810,["whale@Whale",[[1,419,"\n"]],[416,416],[417,417]]],[1527228140049,["whale@Whale",[[1,420,"\n"]],[417,417],[418,418]]],[1527228140735,["whale@Whale",[[1,418,"cp */*/*/*.md file\r\n"]],[418,418],[438,438]]],[1527228202111,[null,[[-1,436,"\r"],[1,437,"\n"]],[436,436],[438,438]]],[1527228202111,[null,[[1,436,"\r"],[-1,436,"\n"]],[438,438],[436,436]]],[1527228143564,["whale@Whale",[[-1,424,"/"],[-1,436,"\r"]],[425,425],[424,424]]],[1527228144350,["whale@Whale",[[1,424,"/"]],[424,424],[425,425]]],[1527228148547,["whale@Whale",[[1,418,"·"]],[418,418],[419,419]]],[1527228149506,["whale@Whale",[[-1,418,"·"]],[419,419],[418,418]]],[1527228149988,["whale@Whale",[[1,418,"`"]],[418,418],[419,419]]],[1527228151010,["whale@Whale",[[1,437,"`"]],[437,437],[438,438]]]]],["40c0e031-4fd5-47ed-9a97-d44a239801db",1528949772485,"递归获取此目录下，所有以md结尾的文件。\n![捕获]($res/%E6%8D%95%E8%8E%B7.PNG)\n\nfind . -name \"*.md\" > find.txt\n将文件的路径保存为find.txt\n\nsed -i s/[[:space:]]//g find.txt\n去掉文件名中的空格\n\nfor line in `cat find.txt`; do cp $line file/.; done\n放弃上述的命令\n\nfor line  in `find . -name \"*.md\"`;\ndo\na=`sed s/[[:space:]]//g $line`\nmv `$line` $a\ndone\n\n\n---\n参考：https://blog.csdn.net/keypeople/article/details/78147288\n\n删除所有空格\n![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)\n\n`cp */*/*/*.md file`\n\n\n\n",[[1528949752239,["whale@Whale",[[-1,57,"find . -name \"*.md\" > find.txt\n将文件的路径保存为find.txt"]],[57,105],[57,57]]],[1528950147851,["whale@Whale",[[1,0,"\n"]],[0,0],[1,1]]],[1528950148051,["whale@Whale",[[1,0,"\n"]],[1,1],[2,2]]],[1528950148275,["whale@Whale",[[1,2,"\n"]],[2,2],[3,3]]],[1528950148499,["whale@Whale",[[1,3,"\n"]],[3,3],[4,4]]],[1528950148707,["whale@Whale",[[1,4,"\n"]],[4,4],[5,5]]],[1528950148931,["whale@Whale",[[1,5,"\n"]],[5,5],[6,6]]],[1528950149099,["whale@Whale",[[1,6,"\n"]],[6,6],[7,7]]],[1528950152046,["whale@Whale",[[1,6,"---"]],[6,6],[9,9]]],[1528950154752,["whale@Whale",[[1,5,"x"]],[5,5],[6,6]]],[1528950155096,["whale@Whale",[[-1,5,"x"]],[6,6],[5,5]]],[1528950160568,["whale@Whale",[[1,5,"以下都是草稿"]],[5,5],[11,11]]],[1528950169091,["whale@Whale",[[1,0,"案例一："]],[0,0],[4,4]]],[1528950169395,["whale@Whale",[[1,9,"\n"]],[4,4],[5,5]]],[1528952841292,["whale@Whale",[[1,10,"\n"]],[5,5],[6,6]]],[1528952844157,["whale@Whale",[[1,5,"t"]],[5,5],[6,6]]],[1528952844656,["whale@Whale",[[-1,5,"t"]],[6,6],[5,5]]],[1528952865594,["whale@Whale",[[1,7,"![捕获 3]($res/%E6%8D%95%E8%8E%B7%203.PNG)\n\n"]],[6,6],[48,48]]],[1528952869377,["whale@Whale",[[1,6,"j"]],[6,6],[7,7]]],[1528952870699,["whale@Whale",[[-1,6,"j"]],[7,7],[6,6]]],[1528952873886,["whale@Whale",[[1,6,"z"]],[6,6],[7,7]]],[1528952874325,["whale@Whale",[[-1,6,"z"]],[7,7],[6,6]]],[1528952876658,["whale@Whale",[[1,6,"知识点"]],[6,6],[9,9]]],[1528952878530,["whale@Whale",[[-1,6,"知识点"]],[9,9],[6,6]]],[1528952881694,["whale@Whale",[[1,6,"whale"]],[6,6],[11,11]]],[1528952882592,["whale@Whale",[[-1,8,"ale"]],[11,11],[8,8]]],[1528952891878,["whale@Whale",[[1,8,"ile--do--done 语句"]],[8,8],[24,24]]],[1528952896779,["whale@Whale",[[1,25,"\n"]],[24,24],[25,25]]],[1528952901282,["whale@Whale",[[1,25,"-"]],[25,25],[26,26]]],[1528952903481,["whale@Whale",[[-1,25,"-"]],[26,26],[25,25]]],[1528952905063,["whale@Whale",[[1,25,"``"]],[25,25],[27,27]]],[1528952907389,["whale@Whale",[[1,26,"-le"]],[26,26],[29,29]]],[1528952966739,["whale@Whale",[[-1,25,"`-le`"]],[25,30],[25,25]]],[1528952968236,["whale@Whale",[[1,6,"z"]],[6,6],[7,7]]],[1528952968635,["whale@Whale",[[-1,6,"z"]],[7,7],[6,6]]],[1528952971502,["whale@Whale",[[1,6,"知识点一："]],[6,6],[11,11]]],[1528952977580,["whale@Whale",[[1,29,"的运用"]],[29,29],[32,32]]],[1528952986144,["whale@Whale",[[1,33,"知识点二：判断符号"]],[33,33],[42,42]]],[1528952990798,["whale@Whale",[[-1,43,"![捕获 3]($res/%E6%8D%95%E8%8E%B7%203.PNG)"]],[43,83],[43,43]]],[1528952992293,["whale@Whale",[[1,5,"![捕获 3]($res/%E6%8D%95%E8%8E%B7%203.PNG)"]],[5,5],[45,45]]],[1528952995948,["whale@Whale",[[-1,7,"捕获 3"]],[11,11],[7,7]]],[1528952997427,["whale@Whale",[[1,85,"\n"]],[78,78],[79,79]]],[1528952998423,["whale@Whale",[[1,79,"![捕获 3]($res/%E6%8D%95%E8%8E%B7%203.PNG)"]],[79,79],[119,119]]],[1528952999849,["whale@Whale",[[-1,79,"![捕获 3]($res/%E6%8D%95%E8%8E%B7%203.PNG)"]],[119,119],[79,79]]],[1528953007002,["whale@Whale",[[1,79,"-eq           //等于\n\n-ne           //不等于\n\n-gt            //大于 （greater ）\n\n-lt            //小于  （less）\n\n-ge            //大于等于\n\n-le            //小于等于"]],[79,79],[225,225]]],[1528953010188,["whale@Whale",[[1,79,"\n"],[-1,82,"          "],[1,92,"          "],[-1,102,"          "],[1,112,"          "],[-1,123,"            "],[1,135,"            "],[-1,148," "],[1,149," "],[-1,155,"           "],[1,166,"           "],[-1,172," "],[1,173," "],[-1,184,"           "],[1,195,"           "],[-1,207,"           "],[1,218,"           ···"]],[78,78],[82,82]]],[1528953011067,["whale@Whale",[[-1,79,"···"]],[82,82],[79,79]]],[1528953011950,["whale@Whale",[[1,79,"```"]],[79,79],[82,82]]],[1528953016059,["whale@Whale",[[1,230,"```"]],[230,230],[233,233]]],[1528953076835,[null,[[1,82,"\n-e"],[-1,219,"···"]],[82,82],[219,219]]],[1528953076835,[null,[[-1,82,"\n-e"],[1,222,"···"]],[219,219],[82,82]]],[1528953020373,["whale@Whale",[[1,234,"z"]],[234,234],[235,235]]],[1528953020904,["whale@Whale",[[-1,234,"z"]],[235,235],[234,234]]],[1528953034231,["whale@Whale",[[1,234,"知识点三：数字的自增。"]],[234,234],[245,245]]],[1528953034753,["whale@Whale",[[-1,244,"。"]],[245,245],[244,244]]],[1528953035108,["whale@Whale",[[1,244,"，。"]],[244,244],[246,246]]],[1528953036107,["whale@Whale",[[-1,245,"。"]],[246,246],[245,245]]],[1528953038034,["whale@Whale",[[1,245,"用"]],[245,245],[246,246]]],[1528953041090,["whale@Whale",[[-1,244,"，用"]],[246,246],[244,244]]],[1528953041412,["whale@Whale",[[1,249,"\n"]],[244,244],[245,245]]],[1528953048497,["whale@Whale",[[1,245,"var = $()"]],[245,245],[254,254]]],[1528953050015,["whale@Whale",[[1,253,"()"]],[253,253],[255,255]]],[1528953058140,["whale@Whale",[[1,254,"$var + 1"]],[254,254],[262,262]]],[1528953074761,["whale@Whale",[[1,0,"### "]],[0,0],[4,4]]],[1528953256836,[null,[[1,86,"\n-e"],[-1,223,"···"]],[86,86],[223,223]]],[1528953256836,[null,[[-1,86,"\n-e"],[1,226,"···"]],[223,223],[86,86]]],[1528953240971,["whale@Whale",[[-1,284,"递归获取此目录下，所有以md结尾的文件。\n![捕获]($res/%E6%8D%95%E8%8E%B7.PNG)"]],[284,339],[284,284]]],[1528953242117,["whale@Whale",[[-1,287,"\n"]],[287,287],[286,286]]],[1528953242533,["whale@Whale",[[-1,286,"\n"]],[286,286],[285,285]]],[1528953243266,["whale@Whale",[[-1,285,"\n"]],[285,285],[284,284]]],[1528953556846,[null,[[1,86,"\n-e"],[-1,223,"···"]],[86,86],[223,223]]],[1528953556846,[null,[[-1,86,"\n-e"],[1,226,"···"]],[223,223],[86,86]]],[1528953542139,["whale@Whale",[[1,270,"a"]],[270,270],[271,271]]],[1528953542714,["whale@Whale",[[-1,270,"a"]],[271,271],[270,270]]],[1528953550735,["whale@Whale",[[1,270,"案例二："]],[270,270],[274,274]]]]],["f09a5935-6132-483d-bfa1-e67fffd618da",1554193721151,"### 案例一：\n![]($res/%E6%8D%95%E8%8E%B7%203.PNG)\n知识点一：while--do--done 语句的运用\n知识点二：判断符号\n```\n-eq           //等于\n\n-ne           //不等于\n\n-gt            //大于 （greater ）\n\n-lt            //小于  （less）\n\n-ge            //大于等于\n\n-le            //小于等于\n```\n知识点三：数字的自增\nvar = $(($var + 1))\n\n案例二：\n\n\n以下都是草稿\n---\n\nsed -i s/[[:space:]]//g find.txt\n去掉文件名中的空格\n\nfor line in `cat find.txt`; do cp $line file/.; done\n放弃上述的命令\n\nfor line  in `find . -name \"*.md\"`;\ndo\na=`sed s/[[:space:]]//g $line`\nmv `$line` $a\ndone\n\n\n---\n参考：https://blog.csdn.net/keypeople/article/details/78147288\n\n删除所有空格\n![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)\n\n`cp */*/*/*.md file`\n\n\n\n",[[1554193679330,["whale@Whale",[[1,105," equal"]],[105,105],[111,111]]],[1554193684565,["whale@Whale",[[1,132," not equal"]],[132,132],[142,142]]],[1554193690205,["whale@Whale",[[1,226," ga"]],[226,226],[229,229]]],[1554193690887,["whale@Whale",[[-1,227,"ga"]],[229,229],[227,227]]],[1554193722642,["whale@Whale",[[1,73,"\n"]],[73,73],[74,74]]],[1554193724238,["whale@Whale",[[1,46,"\n"]],[46,46],[47,47]]],[1554193736070,["whale@Whale",[[-1,0,"### "]],[0,3],[0,0]]],[1554193739026,["whale@Whale",[[-1,43,"知识点一：while--do--done 语句的运用\n"]],[43,70],[43,43]]],[1554193740140,["whale@Whale",[[1,0,"\n"]],[0,0],[1,1]]],[1554193741880,["whale@Whale",[[1,0,"知识点一：while--do--done 语句的运用\n"]],[0,0],[27,27]]],[1554193742889,["whale@Whale",[[-1,71,"\n"]],[71,71],[70,70]]],[1554193746424,["whale@Whale",[[1,0,"## "]],[0,0],[3,3]]],[1554193750733,["whale@Whale",[[1,74,"## "]],[74,74],[77,77]]],[1554193754927,["whale@Whale",[[1,259,"## "]],[259,259],[262,262]]],[1554193800084,["whale@Whale",[[-1,294,"案例二：\n\n\n以下都是草稿\n---\n\nsed -i s/[[:space:]]//g find.txt\n去掉文件名中的空格\n\nfor line in `cat find.txt`; do cp $line file/.; done\n放弃上述的命令\n\nfor line  in `find . -name \"*.md\"`;\ndo\na=`sed s/[[:space:]]//g $line`\nmv `$line` $a\ndone\n\n\n---\n参考：https://blog.csdn.net/keypeople/article/details/78147288\n\n删除所有空格\n![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)\n\n`cp */*/*/*.md file`\n\n\n"]],[294,647],[294,294]]],[1554193814272,["whale@Whale",[[1,294,"删除所有空格\r\n![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)\r\n"]],[294,294],[344,344]]],[1554194138844,[null,[[-1,300,"\r"],[1,301,"\n"],[-1,342,"\r"],[1,343,"\n"]],[300,300],[344,344]]],[1554194138844,[null,[[1,300,"\r"],[-1,300,"\n"],[1,342,"\r"],[-1,342,"\n"]],[344,344],[300,300]]],[1554194132152,["whale@Whale",[[-1,294,"删除所有空格\r"],[-1,342,"\r"]],[294,300],[294,294]]],[1554194205332,["whale@Whale",[[-1,295,"![捕获 2]($res/%E6%8D%95%E8%8E%B7%202.PNG)"]],[295,335],[295,295]]],[1554194276700,["whale@Whale",[[-1,296,"\n"]],[295,295],[294,294]]],[1554194278312,["whale@Whale",[[1,294,"## an"]],[294,294],[299,299]]],[1554194278951,["whale@Whale",[[-1,297,"an"]],[299,299],[297,297]]],[1554194281349,["whale@Whale",[[1,297,"案例二："]],[297,297],[301,301]]],[1554194281831,["whale@Whale",[[1,303,"\n"]],[301,301],[302,302]]],[1554217489405,["whale@Whale",[[1,303,"for line in $(cat IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r\ncat https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n"]],[303,303],[1184,1184]]],[1554217492244,["whale@Whale",[[1,302,"·"],[-1,332,"\r"],[-1,336,"\r"],[-1,376,"\r"],[-1,417,"\r"],[-1,423,"\r"],[-1,445,"\r"],[-1,447,"\r"],[-1,486,"\r"],[-1,496,"\r"],[-1,533,"\r"],[-1,547,"\r"],[-1,657,"\r"],[-1,678,"\r"],[-1,680,"\r"],[-1,709,"\r"],[-1,713,"\r"],[-1,759,"\r"],[-1,765,"\r"],[-1,783,"\r"],[-1,785,"\r"],[-1,810,"\r"],[-1,814,"\r"],[-1,854,"\r"],[-1,885,"\r"],[-1,922,"\r"],[-1,1009,"\r"],[-1,1071,"\r"],[-1,1113,"\r"],[-1,1123,"\r"],[-1,1150,"\r"],[-1,1158,"\r"],[-1,1164,"\r"],[-1,1166,"\r"],[-1,302,"·\r"]],[302,302],[302,302]]],[1554217493052,["whale@Whale",[[1,302,"```"]],[302,302],[305,305]]],[1554217496241,["whale@Whale",[[-1,1153,"\n"],[1,1154,"```"]],[1153,1153],[1156,1156]]],[1554217505699,["whale@Whale",[[1,302,"\n"]],[301,301],[302,302]]],[1554217506622,["whale@Whale",[[1,302,"sa"]],[302,302],[304,304]]],[1554217507217,["whale@Whale",[[-1,302,"sa"]],[304,304],[302,302]]],[1554217519705,["whale@Whale",[[1,302,"扫描htb所有开放443端口的"]],[302,302],[317,317]]],[1554217581502,[null,[[-1,321,"·"],[1,322,""],[-1,1154,"or line in $(ca``` IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[-1,1305,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"],[1,2037,"/etc/hosts\n```"]],[321,321],[2051,2051]]],[1554217581502,[null,[[1,321,"·"],[-1,321,""],[1,1153,"or line in $(ca``` IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[1,1158,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"],[-1,1158,"/etc/hosts\n```"]],[2051,2051],[321,321]]],[1554217537975,["whale@Whale",[[1,317,"主机，查询到域名后，写入"]],[317,317],[329,329]]],[1554217538517,["whale@Whale",[[-1,327,"写入"]],[329,329],[327,327]]],[1554217547467,["whale@Whale",[[1,327,"自动写入htb"]],[327,327],[334,334]]],[1554217556589,["whale@Whale",[[-1,331,"htb"]],[334,334],[331,331]]],[1554217558813,["whale@Whale",[[1,331,"/etc/hosts"]],[331,331],[341,341]]],[1554217641537,[null,[[-1,345,"·"],[1,346,""],[-1,1178,"or line in $(ca``` IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[-1,1329,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"],[1,2061,"/etc/hosts\n```"]],[345,345],[2075,2075]]],[1554217641537,[null,[[1,345,"·"],[-1,345,""],[1,1177,"or line in $(ca``` IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[1,1182,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"],[-1,1182,"/etc/hosts\n```"]],[2075,2075],[345,345]]],[1554217633348,["whale@Whale",[[1,1196,"\n\n"]],[1196,1196],[1197,1197]]],[1554217701539,[null,[[-1,345,"·"],[1,346,""],[-1,1178,"or line in $(ca```\n\n IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[-1,1331,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r"],[1,2061,"/etc/hosts\n```"]],[345,345],[2075,2075]]],[1554217701539,[null,[[1,345,"·"],[-1,345,""],[1,1177,"or line in $(ca```\n\n IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r"],[1,1182,"https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r"],[-1,1182,"/etc/hosts\n```"]],[2075,2075],[345,345]]],[1554217648610,["whale@Whale",[[1,1198,"![1]($res/1.PNG)\n\n![2]($res/2.PNG)\n\n"]],[1197,1197],[1233,1233]]],[1554217651519,["whale@Whale",[[1,1197,"etc"]],[1197,1197],[1200,1200]]],[1554217652651,["whale@Whale",[[-1,1197,"etc"]],[1200,1200],[1197,1197]]],[1554217662407,["whale@Whale",[[1,1197,"/etc/hosts成功写入"]],[1197,1197],[1211,1211]]],[1554217664980,["whale@Whale",[[1,1230,"\n"]],[1229,1229],[1230,1230]]],[1554217672333,["whale@Whale",[[1,1230,"但是运行效果不佳"]],[1230,1230],[1238,1238]]],[1554217673859,["whale@Whale",[[-1,1234,"效果不佳"]],[1238,1238],[1234,1234]]],[1554217700752,["whale@Whale",[[1,1234,"展示效果不佳，以后参考如何写一个看起来整洁、美观、"]],[1234,1234],[1259,1259]]],[1554217761541,[null,[[-1,345,"·"],[1,347,""],[-1,1178,"or line in $(ca"],[1,1193,"\ncat /etc/hosts\n"],[1,1260,""],[-1,1278," IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r\ncat https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"]],[345,345],[1278,1278]]],[1554217761541,[null,[[1,345,"·"],[-1,346,""],[1,1177,"or line in $(ca"],[-1,1177,"\ncat /etc/hosts\n"],[-1,1260,""],[1,1278," IP-out.txt)\r\ndo\r\n    nmap -p443 --open ${line} >> https\r\n    #masscan -p443 -e tun0 $line --open\r\ndone\r\n## scan open port ##\r\n\r\ncat https | grep 10.10.10 > https_out\r\nrm https\r\nawk '{ print $5}' https_out > https\r\nrm https_out\r\ncat https | grep 10.10.10 > https_out #https_out file is important, it's contains all ips who opens 443 port\r\n## clearing data ##\r\n\r\nfor IPs in $(cat https_out)\r\ndo\r\n    sslyze --regular ${IPs} --xml_out=${IPs}\r\ndone\r\n## get domain ##\r\n\r\nfor IPs in $(cat https)\r\ndo\r\n    if ls /root/Desktop/$IPs/$IPs;then\r\n         echo '-------------'\r\n         mv $IPs /root/Desktop/$IPs\r\n         cat /root/Desktop/$IPs/$IPs | grep \"Common Name\" > /root/Desktop/$IPs/domain\r\n         Domain=`awk '{print $3}' /root/Desktop/$IPs/domain`\r\n         echo $IPs $Domain >> /etc/hosts\r\n    else\r\n         echo 'not found'\r\n    fi\r\ndone\r\n\r\ncat /etc/hosts\r\n\n"]],[1278,1278],[345,345]]],[1554217709592,["whale@Whale",[[1,1259,"专业的shell script脚本。"]],[1259,1259],[1277,1277]]],[1554217714645,["whale@Whale",[[-1,1243,"参考"]],[1245,1245],[1243,1243]]],[1554217716550,["whale@Whale",[[1,1243,"学习"]],[1243,1243],[1245,1245]]],[1554217750248,["whale@Whale",[[1,457," masscan"]],[418,457],[465,465]]],[1554217753843,["whale@Whale",[[1,458,"#"]],[458,458],[459,459]]],[1554217760750,["whale@Whale",[[1,466,"扫描效果不佳"]],[466,466],[472,472]]]]]]}