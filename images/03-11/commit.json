{"compress":true,"commitItems":[["da91a875-b6f7-4b11-be1f-9470afe291a2",1552216506800,"",[[1552216465139,["whale@Whale",[[1,0,"snmp\n===\n\n\n# 161端口——snmp协议\n\n  [参考](http://www.freebuf.com/vuls/133517.html) \n\nSNMP = simple network manage protocol = 简单网络管理协议\n\n?该服务的目的。为了管理网络设备。\n\n一个路由器，用SNMP协议报告带宽利用率、冲突率等信息。当snmp协议 配置不当，会泄露系统信息。"]],[0,0],[196,196]]],[1552216466956,["whale@Whale",[[-1,0,"snmp\n===\n\n"],[-1,28,"  "],[1,30,"  "],[-1,75," "],[1,76," "]],[0,10],[0,0]]],[1552216468508,["whale@Whale",[[-1,0,"\n"]],[1,1],[0,0]]],[1552216469874,["whale@Whale",[[-1,117,"?"]],[118,118],[117,117]]],[1552216470675,["whale@Whale",[[1,117,"?"]],[117,117],[118,118]]],[1552216473051,["whale@Whale",[[-1,117,"?"]],[117,118],[117,117]]],[1552216473604,["whale@Whale",[[1,117,"？"]],[117,117],[118,118]]],[1552216475711,["whale@Whale",[[1,185,"\n\n"]],[185,185],[186,186]]],[1552216475716,["whale@Whale",[[-1,186,"\n"],[1,187,"\\"]],[186,186],[187,187]]],[1552216476432,["whale@Whale",[[-1,186,"\\"],[1,187,"\n"]],[187,187],[186,186]]],[1552216476811,["whale@Whale",[[1,187,"\n"]],[186,186],[187,187]]],[1552216527581,["whale@Whale",[[1,188,"![1]($res/1.png)\n\n"]],[187,187],[205,205]]],[1552216528882,["whale@Whale",[[-1,187,"\n"]],[187,187],[186,186]]],[1552216540808,["whale@Whale",[[1,205,"\n"]],[204,204],[205,205]]],[1552216541644,["whale@Whale",[[1,205,"开启msfconsole后\n\nuse scanner/snmp/snmp_enum\n\nset RHOSTS 192.168.1.0/24（[配合zmap](http://www.jianshu.com/p/e870222a0cea) 寻找目标）\n\nset THREADS 50\n\nrun 开始扫描"]],[205,205],[353,353]]],[1552216547874,["whale@Whale",[[-1,274,"["],[-1,321," "],[1,322," "]],[275,275],[274,274]]],[1552216550867,["whale@Whale",[[-1,280,"](http://www.jianshu.com/p/e870222a0cea) "]],[280,321],[280,280]]],[1552216552314,["whale@Whale",[[1,312,"\n"]],[311,311],[312,312]]],[1552216591515,["whale@Whale",[[1,313,"\n"]],[312,312],[313,313]]],[1552216596324,["whale@Whale",[[1,314,"![2]($res/2.png)\n\n"]],[313,313],[331,331]]],[1552216598286,["whale@Whale",[[-1,313,"\n"]],[313,313],[312,312]]],[1552216616030,["whale@Whale",[[1,331,"\n"]],[330,330],[331,331]]],[1552216617660,["whale@Whale",[[1,331,"一连找了7、8个161开放的主机，但是snmp请求总是超时。\n\n…… 可能是哪里出现了问题。\n\n!  snmp_enum是用来寻找161开放主机的…… 它效率还不高\n\n在已获得目标的情况下，用snmp_login尝试登陆"]],[331,331],[441,441]]],[1552216632649,["whale@Whale",[[-1,380," "],[1,381," "],[1,442,"\n"]],[441,441],[442,442]]],[1552216632935,["whale@Whale",[[1,443,"\n"]],[442,442],[443,443]]],[1552216634329,["whale@Whale",[[1,443,"在我几乎要放弃的时候，奇迹发生了：》\n\n可以看到它的权限是 read-only只读，如果运气好找到 read-write 那就更好了。\n\n> 默认账号和密码：public、private\n> \n> snmp弱口令探测(这里的弱口令是指snmp管理时用到的团体字符串。一般可读权限的为public,可读可写的默认为private)\n\nsnmpwalk 使用snmp协议，请求OID对象标识。"]],[443,443],[637,637]]],[1552216692879,["whale@Whale",[[1,443,"\n"]],[442,442],[443,443]]],[1552216698218,["whale@Whale",[[1,444,"![3]($res/3.png)\n\n"]],[443,443],[461,461]]],[1552216699767,["whale@Whale",[[-1,443,"\n"]],[443,443],[442,442]]],[1552216743000,["whale@Whale",[[1,656,"\n"]],[655,655],[656,656]]],[1552216743331,["whale@Whale",[[1,657,"\n"]],[656,656],[657,657]]],[1552216744104,["whale@Whale",[[1,657,"snmpwalk -c public -v 1 10.10.10.105"]],[657,657],[693,693]]],[1552216747774,["whale@Whale",[[1,657,"`"]],[657,657],[658,658]]],[1552216748689,["whale@Whale",[[1,694,"`"]],[694,694],[695,695]]],[1552216789681,["whale@Whale",[[1,696,"\n"]],[695,695],[696,696]]],[1552216789894,["whale@Whale",[[1,697,"\n"]],[696,696],[697,697]]],[1552216792308,["whale@Whale",[[-1,697,"\n"],[1,698,"## Metasploit的snmp辅助模块"]],[697,697],[719,719]]],[1552216792853,["whale@Whale",[[1,719,"\n\n"]],[719,719],[720,720]]],[1552216815769,["whale@Whale",[[1,720,"[原文](https://www.offensive-security.com/metasploit-unleashed/snmp-scan/) \n\n       继续我们的信息搜集，让我们看看 SNMP扫描。snmp在寻找具体的系统信息方面 ，或者实际的获取远程设备权限方面很有用。如果你能够发现cisco设备运行着 private字符串，你可以下载整个设备的设置，更改它，并且上传你自己的恶意代码。通常密码是7等级加密，这意味着它们很容易就能解密并获取登陆密码。\n\nMetasploit内置了辅助模块用来扫描snmp设备。这里有许多要点需要知道在我们开始snmp扫描之前。\n\n首先，‘read only’ 和 'read write' 团体字符串对于什么类型的信息能够被获取或者更改很重要。如果你能‘猜’出只读或者读写字符串，你可以获取很多平常方法获取不到的入口。并且，如果基于windows的设备配置了snmp，经常是 只读或者读写团体字符串，你可以获取补丁等级，运行的服务，上一次关机时间，系统的用户名，途径，和许多对于攻击者很有用的方法。\n\n注意：默认的Metasploitable（用来测试meta的linux靶机，译者注） 的smnp设备仅仅监听localhost。这里有许多示范来使你改变这些默认设置。开启并编辑“/etc/defauld/snmpd”\n\n并且改变下面的：\n\n> SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -I -smux -p /var/run/snmpd.pid 127.0.0.1'\n\n变为：\n\n> SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -I -smux -p /var/run/snmpd.pid 0.0.0.0'\n\n设置需要重启生效。一旦重启，你可以在攻击机器上扫描这个设备了。\n\n#### 什么MIB？\n\n当探索snmp时，这里有叫做mib的API。MIB代表management information base，管理信息库。\n\n> _**SNMP协议有3种方式在客户端和远程SNMP设备之间进行身份验证，在SNMP v1和SNMPv2版本中，使用可读的字符串数据类型即社区字符串（公开或私有）来进行认证。**_\n> \n> 而在SNMP_v3**中，用户则可以选择用户名、密码和身份认证方式进行安全验证。另外，像对象标识符（oids）和陷阱消息（traps）等其它内容信息将会统一保存在管理信息库（MIB）中进行存储。译者注**_\n\n这个界面允许你探寻设备并且提取信息。Matasploit载入了一些默认的MIBs，在数据库里，meta使用它们来寻找更多的信息取决于获取的入口的等级。让我们来看看辅助模块。\n\n> search snmp  使用snmp_login爆破登陆名\n> \n> use auxiliary/scanner/snmp/snmp_login\n> \n> set RHOSTS ip范围\n> \n> set THREADS 10\n> \n> run\n\n> …… \n> \n> [*]**192.168.1.50 'public' **'APC Web/SNMP Management Card (MB:v3.8.6 PF:v3.5.5 PN:apc_hw02_aos_355.bin AF1:v3.5.5 AN1:apc_hw02_sumx_355.bin MN:AP9619 HR:A10 SN: NA0827001465 MD:07/01/2008) (Embedded PowerNet SNMP Agent SW v2.2 compatible)'[*]Auxiliary module execution completed\n\n(上面是有用的部分的扫描结果)我们可以找到一个团体字符串‘public’。这最可能是read-only 并且没有揭示很多信息。我们知道了这个设备是APC Web/SNMP设备，和运行的版本。\n\n#### SNMP Enum\n\n当运行snmp扫描模块，我们可以搜集到许多信息例如开放端口，服务，主机名，进程，和正常运行时间。\n\n使用metasploitable虚拟机作为我们的目标，我们将运行 **auxiliary/scanner/snmp/snmp_enum**模块，并且看看会提供给我们什么信息。首先我们加载模块并且设置RHOST选项，使用存储在我们的workspace里的信息。\n\n使用 host -R 将会为我们设置这个选项。"]],[720,720],[2620,2620]]],[1552216875706,["whale@Whale",[[-1,792," \n\n      "],[1,801," \n\n      "],[-1,1023,"’"],[-1,1897," "],[1,1898," "],[-1,2015," "],[1,2016," "],[-1,2048," "],[1,2049," "],[-1,2498," "],[1,2499," "]],[1024,1024],[1023,1023]]],[1552216876763,["whale@Whale",[[-1,1012,"，"]],[1013,1013],[1012,1012]]],[1552216878005,["whale@Whale",[[1,1012,","]],[1012,1012],[1013,1013]]],[1552216881230,["whale@Whale",[[-1,1012,",‘"]],[1013,1013],[1012,1012]]],[1552216881628,["whale@Whale",[[1,1012,"`"]],[1012,1012],[1013,1013]]],[1552216884035,["whale@Whale",[[1,1022,"`"]],[1022,1022],[1023,1023]]],[1552216885562,["whale@Whale",[[1,1027,"`"]],[1027,1027],[1028,1028]]],[1552216888099,["whale@Whale",[[1,1038,"`"]],[1038,1038],[1039,1039]]],[1552216889268,["whale@Whale",[[-1,1039,"'"]],[1039,1039],[1039,1039]]],[1552216892403,["whale@Whale",[[-1,1026,"'"]],[1027,1027],[1026,1026]]],[1552216896690,["whale@Whale",[[-1,1039,"团体"]],[1039,1041],[1039,1039]]],[1552216898781,["whale@Whale",[[1,1039,"public"]],[1039,1039],[1045,1045]]],[1552217073521,["whale@Whale",[[-1,954,"\n"]],[954,954],[953,953]]],[1552229451910,["whale@Whale",[[-1,17,"  "]],[19,19],[17,17]]],[1552229452403,["whale@Whale",[[-1,16,"\n"]],[17,17],[16,16]]],[1552229569914,["whale@Whale",[[1,202,"\n"]],[201,201],[202,202]]],[1552229572234,["whale@Whale",[[1,202,"###"]],[202,202],[205,205]]],[1552229573032,["whale@Whale",[[-1,204,"#"]],[205,205],[204,204]]],[1552229574092,["whale@Whale",[[1,204," an"]],[204,204],[207,207]]],[1552229574776,["whale@Whale",[[-1,205,"an"]],[207,207],[205,205]]],[1552229577321,["whale@Whale",[[1,205,"案例"]],[205,205],[207,207]]]]],["832a3c23-661f-44df-b670-f05645578bef",1552276566861,"# 161端口——snmp协议\n[参考](http://www.freebuf.com/vuls/133517.html) \n\nSNMP = simple network manage protocol = 简单网络管理协议\n\n？该服务的目的。为了管理网络设备。\n\n一个路由器，用SNMP协议报告带宽利用率、冲突率等信息。当snmp协议 配置不当，会泄露系统信息。\n\n![1]($res/1.png)\n\n## 案例\n开启msfconsole后\n\nuse scanner/snmp/snmp_enum\n\nset RHOSTS 192.168.1.0/24（配合zmap寻找目标）\n\nset THREADS 50\n\nrun 开始扫描\n\n![2]($res/2.png)\n\n一连找了7、8个161开放的主机，但是snmp请求总是超时。\n\n…… 可能是哪里出现了问题。\n\n!  snmp_enum是用来寻找161开放主机的…… 它效率还不高\n\n在已获得目标的情况下，用snmp_login尝试登陆\n\n![3]($res/3.png)\n\n在我几乎要放弃的时候，奇迹发生了：》\n\n可以看到它的权限是 read-only只读，如果运气好找到 read-write 那就更好了。\n\n> 默认账号和密码：public、private\n> \n> snmp弱口令探测(这里的弱口令是指snmp管理时用到的团体字符串。一般可读权限的为public,可读可写的默认为private)\n\nsnmpwalk 使用snmp协议，请求OID对象标识。\n\n`snmpwalk -c public -v 1 10.10.10.105`\n\n## Metasploit的snmp辅助模块\n[原文](https://www.offensive-security.com/metasploit-unleashed/snmp-scan/) \n\n       继续我们的信息搜集，让我们看看 SNMP扫描。snmp在寻找具体的系统信息方面 ，或者实际的获取远程设备权限方面很有用。如果你能够发现cisco设备运行着 private字符串，你可以下载整个设备的设置，更改它，并且上传你自己的恶意代码。通常密码是7等级加密，这意味着它们很容易就能解密并获取登陆密码。\nMetasploit内置了辅助模块用来扫描snmp设备。这里有许多要点需要知道在我们开始snmp扫描之前。\n\n首先`read only` 和 `read write` public字符串对于什么类型的信息能够被获取或者更改很重要。如果你能‘猜’出只读或者读写字符串，你可以获取很多平常方法获取不到的入口。并且，如果基于windows的设备配置了snmp，经常是 只读或者读写团体字符串，你可以获取补丁等级，运行的服务，上一次关机时间，系统的用户名，途径，和许多对于攻击者很有用的方法。\n\n注意：默认的Metasploitable（用来测试meta的linux靶机，译者注） 的smnp设备仅仅监听localhost。这里有许多示范来使你改变这些默认设置。开启并编辑“/etc/defauld/snmpd”\n\n并且改变下面的：\n\n> SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -I -smux -p /var/run/snmpd.pid 127.0.0.1'\n\n变为：\n\n> SNMPDOPTS='-Lsd -Lf /dev/null -u snmp -I -smux -p /var/run/snmpd.pid 0.0.0.0'\n\n设置需要重启生效。一旦重启，你可以在攻击机器上扫描这个设备了。\n\n#### 什么MIB？\n\n当探索snmp时，这里有叫做mib的API。MIB代表management information base，管理信息库。\n\n> _**SNMP协议有3种方式在客户端和远程SNMP设备之间进行身份验证，在SNMP v1和SNMPv2版本中，使用可读的字符串数据类型即社区字符串（公开或私有）来进行认证。**_\n> \n> 而在SNMP_v3**中，用户则可以选择用户名、密码和身份认证方式进行安全验证。另外，像对象标识符（oids）和陷阱消息（traps）等其它内容信息将会统一保存在管理信息库（MIB）中进行存储。译者注**_\n\n这个界面允许你探寻设备并且提取信息。Matasploit载入了一些默认的MIBs，在数据库里，meta使用它们来寻找更多的信息取决于获取的入口的等级。让我们来看看辅助模块。\n\n> search snmp  使用snmp_login爆破登陆名\n> \n> use auxiliary/scanner/snmp/snmp_login\n> \n> set RHOSTS ip范围\n> \n> set THREADS 10\n> \n> run\n\n> …… \n> \n> [*]**192.168.1.50 'public' **'APC Web/SNMP Management Card (MB:v3.8.6 PF:v3.5.5 PN:apc_hw02_aos_355.bin AF1:v3.5.5 AN1:apc_hw02_sumx_355.bin MN:AP9619 HR:A10 SN: NA0827001465 MD:07/01/2008) (Embedded PowerNet SNMP Agent SW v2.2 compatible)'[*]Auxiliary module execution completed\n\n(上面是有用的部分的扫描结果)我们可以找到一个团体字符串‘public’。这最可能是read-only 并且没有揭示很多信息。我们知道了这个设备是APC Web/SNMP设备，和运行的版本。\n\n#### SNMP Enum\n\n当运行snmp扫描模块，我们可以搜集到许多信息例如开放端口，服务，主机名，进程，和正常运行时间。\n\n使用metasploitable虚拟机作为我们的目标，我们将运行 **auxiliary/scanner/snmp/snmp_enum**模块，并且看看会提供给我们什么信息。首先我们加载模块并且设置RHOST选项，使用存储在我们的workspace里的信息。\n\n使用 host -R 将会为我们设置这个选项。\n",[[1552276522139,["whale@Whale",[[1,2,"\n"]],[2,2],[3,3]]],[1552276522389,["whale@Whale",[[1,3,"\n"]],[3,3],[4,4]]],[1552276525598,["whale@Whale",[[-1,0,"# "]],[2,2],[0,0]]],[1552277562107,["whale@Whale",[[1,2,"## "]],[2,2],[5,5]]],[1552277563996,["whale@Whale",[[-1,0,"\n"]],[1,1],[0,0]]],[1552277565024,["whale@Whale",[[-1,0,"\n"]],[1,1],[0,0]]],[1552277573317,["whale@Whale",[[1,64,"http://www.cnblogs.com/LittleHann/p/3834860.html"]],[64,64],[112,112]]],[1552277576187,["whale@Whale",[[1,20,"z"]],[20,20],[21,21]]],[1552277576894,["whale@Whale",[[-1,20,"z"]],[21,21],[20,20]]],[1552277583831,["whale@Whale",[[-1,17,"[参考]("]],[17,21],[17,17]]],[1552277585235,["whale@Whale",[[-1,58,"\n"]],[58,58],[58,58]]],[1552277586354,["whale@Whale",[[-1,58,"ht"]],[58,58],[58,58]]],[1552277588064,["whale@Whale",[[1,58,"ht"]],[58,58],[58,58]]],[1552277589315,["whale@Whale",[[1,58,"\n"]],[58,58],[58,58]]],[1552277591664,["whale@Whale",[[-1,56,") "]],[58,58],[56,56]]],[1552277593457,["whale@Whale",[[1,17,"\\"]],[17,17],[18,18]]],[1552277594040,["whale@Whale",[[-1,17,"\\"]],[18,18],[17,17]]],[1552277594745,["whale@Whale",[[1,17,"\n"]],[17,17],[18,18]]],[1552277596027,["whale@Whale",[[1,17,"c"]],[17,17],[18,18]]],[1552277596737,["whale@Whale",[[-1,17,"c"]],[18,18],[17,17]]],[1552277598919,["whale@Whale",[[1,17,"参考资料："]],[17,17],[22,22]]],[1552277601641,["whale@Whale",[[1,23,"- "]],[23,23],[25,25]]],[1552277602643,["whale@Whale",[[1,65,"- "]],[65,65],[67,67]]],[1552277603022,["whale@Whale",[[1,67,"\n"]],[67,67],[68,68]]],[1552277603619,["whale@Whale",[[-1,67,"\n"]],[68,68],[67,67]]],[1552277604482,["whale@Whale",[[1,116,"\n"]],[116,116],[117,117]]],[1552277623931,["whale@Whale",[[-1,186,"一个路由器，用SNMP协议报告带宽利用率、冲突率等信息。当snmp协议 配置不当，会泄露系统信息。"]],[186,235],[186,186]]],[1552277626721,["whale@Whale",[[1,166,"一个路由器，用SNMP协议报告带宽利用率、冲突率等信息。当snmp协议 配置不当，会泄露系统信息。"]],[166,166],[215,215]]],[1552277628725,["whale@Whale",[[1,216,"\n"]],[216,216],[217,217]]],[1552277630420,["whale@Whale",[[1,166,"\n"]],[166,166],[167,167]]],[1552277631866,["whale@Whale",[[-1,238,"\n"]],[238,238],[237,237]]],[1552277632112,["whale@Whale",[[-1,237,"\n"]],[237,237],[236,236]]],[1552277632570,["whale@Whale",[[-1,236,"\n"]],[236,236],[235,235]]]]]]}